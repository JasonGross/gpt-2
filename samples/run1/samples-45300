======== SAMPLE 1 ========
_tree x2 l2
  H6 : Ok l2
  H7 : Ok r2
  H8 : lt_tree x2 l2
  H9 : gt_tree x2 r2
  H10 : Ok r1
  H11 : lt_tree x1 Leaf
  H12 : gt_tree x1 r1
  H : X.eq x1 x2
  H0 : bool
  H1 : forall a : elt, InT a (Node c1 Leaf x1 r1) -> InT a Leaf
  a : elt
  H4 : InT a l2
  H5 : X.eq a x2
  ============================
   (InT a l2)


Debug: Going to execute:
<tauto_plugin::is_disj@0>


TcDebug (3) > 
Debug: Level 3: evaluation returns
<tactic closure>


Goal:
  
  r1 : tree
  x1 : X.t
  c1 : Info.t
  c2 : Info.t
  l2 : tree
  x2 : X.t
  r2 : tree
  H6 : Ok l2
  H7 : Ok r2
  H8 : lt_tree x2 l2
  H9 : gt_tree x2 r2
  H10 : Ok r1
  H11 : lt_tree x1 Leaf
  H12 : gt_tree x1 r1
  H : X.eq x1 x2
  H0 : bool
  H1 : forall a : elt, InT a (Node c1 Leaf x1 r1) -> InT a Leaf
  a : elt
  H4 : InT a l2
  H5 : X.eq a x2
  ============================
   (InT a l2)


Debug:
Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id; intro; clear id


TcDebug (2) > 
Goal:
  
  r1 : tree
  x1 : X.t
  c1 : Info.t
  c2 : Info.t
  l2 : tree
  x2 : X.t
  r2 : tree
  H6 : Ok l2
  H7 : Ok r2
  H8 : lt_tree x2 l2
  H9 : gt_tree x2 r2
  H10 : Ok r1
  H11 : lt_tree x1 Leaf
  H12 : gt_tree x1 r1
  H : X.eq x1 x2
  H0 : bool
  H1 : forall a : elt, InT a (Node c1 Leaf x1 r1) -> InT a Leaf
  a : elt
  H4 : InT a l2
  H5 : X.eq a x2
  ============================
   (InT a l2)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id; intro


TcDebug (2) > 
Goal:
  
  r1 : tree
  x1 : X.t
  c1 : Info.t
  c2 : Info.t
  l2 : tree
  x2 : X.t
  r2 : tree
  H6 : Ok l2
  H7 : Ok r2
  H8 : lt_tree x2 l2
  H9 : gt_tree x2 r2
  H10 : Ok r1
  H11 : lt_tree x1 Leaf
  H12 : gt_tree x1 r1
  H : X.eq x1 x2
  H0 : bool
  H1 : forall a : elt, InT a (Node c1 Leaf x1 r1) -> InT a Leaf
  a : elt
  H4 : InT a l2
  H5 : X.eq a x2
  ============================
   (InT a l2)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id


TcDebug (2) > 
Goal:
  
  r1 : tree


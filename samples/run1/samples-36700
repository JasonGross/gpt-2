======== SAMPLE 1 ========
 -> In x s
  H : In x s'
  H2 : In x s'
  ============================
   ((In x (union s s') -> In x s -> In x s' \/ In x s) /\ In x s')


Debug:
Going to execute:
<Coq.Init.Tauto.is_unit_or_eq> flags X1; cut X2;
 [ intro; clear id | cut X1; [ exact id | constructor 1; fail ] ]


TcDebug (1) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  H2 : In x s'
  H3 : In x (union s s')
  H2 : In x s'
  ============================
   ((In x (union s s') -> In x s -> In x s' \/ In x s) /\ In x s')


Debug: Going to execute:
<Coq.Init.Tauto.is_unit_or_eq> flags X1; cut X2


TcDebug (1) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  H2 : In x s'
  H3 : In x (union s s')
  H2 : In x s'
  ============================
   ((In x (union s s') -> In x s -> In x s' \/ In x s) /\ In x s')


Debug: Going to execute:
<Coq.Init.Tauto.is_unit_or_eq> flags X1


TcDebug (1) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  H2 : In x s'
  H3 : In x (union s s')
  H2 : In x s'
  ============================
   ((In x (union s s') -> In x s -> In x s' \/ In x s) /\ In x s')


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_unit_or_eq@0>


TcDebug (2) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  H2 : In x s'
  H3 : In x (union s s')
  H2 : In x s'
  ============================
   ((In x (union s s') -> In x s -> In x s' \/ In x s) /\ In x s')


Debug: Going to execute:
<tauto_plugin::is_unit_or_eq@0>


TcDebug (2) > 
Debug: Level 2: evaluation returns
<tactic closure>


Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  H2 : In x s'
  H3 : In x (union s s')
  H2 : In x s'
  ============================
   ((In x (union s s') -> In x s -> In x s' \/ In x s) /\ In x s')


Debug:
Going to execute:
<Coq.Init.Tauto.flatten_contravariant_conj> flags X1 X2 id


TcDebug (1) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  H2 : In x s'
  H3 : In x (union s s')
  H2 : In x s'
  ============================
   ((In x (union s s') -> In x s -> In x s' \/ In x s) /\ In x s')


Debug:
Going to execute:
fun tauto_flags X1

======== SAMPLE 1 ========
 t
  ============================
   (X.eq x x \/ In x0 l \/ In x0 l')


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro; clear id


TcDebug (1) > 
Goal:
    s : t  x : elt  H : In x (inter s s')
  ============================
   (X.eq x x \/ In x0 l \/ In x0 l')


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro


TcDebug (1) > 
Goal:
    s : t  x : elt  H : In x (inter s s')
  ============================
   (X.eq x x \/ In x0 l \/ In x0 l')


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id


TcDebug (1) > 
Goal:
    s : t  x : elt  H : In x (inter s s')
  ============================
   (X.eq x x \/ In x0 l \/ In x0 l')


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1


TcDebug (1) > 
Goal:
    s : t  x : elt  H : In x (inter s s')
  ============================
   (X.eq x x \/ In x0 l \/ In x0 l')


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_conj@0>


TcDebug (2) > 
Goal:
    s : t  x : elt  H : In x (inter s s')
  ============================
   (X.eq x x \/ In x0 l \/ In x0 l')


Debug: Going to execute:
<tauto_plugin::is_conj@0>


TcDebug (2) > 
Debug: Level 2: evaluation returns
<tactic closure>


Goal:
    s : t  x : elt  H : In x (inter s s')
  ============================
   (X.eq x x \/ In x0 l \/ In x0 l')


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro; clear id


TcDebug (1) > 
Goal:
    s : t  x : elt  H : In x (inter s s')
  ============================
   (X.eq x x \/ In x0 l \/ In x0 l')


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro


TcDebug (1) > 
Goal:
    s : t  x : elt  H : In x (inter s s')
  ============================
   (X.eq x x \/ In x0 l \/ In x0 l')


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id


TcDebug (1) > 
Goal:
    s : t  x : elt  H : In x (inter s s')
  ============================
   (X.eq x x \/ In x0 l \/ In x0 l')


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1


TcDebug (1) > 
Goal:
    s : t  x : elt  H : In x (inter s s')
  ============================
   (X.eq x x \/ In x0 l \/ In x0 l')


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_conj@0>


Tc

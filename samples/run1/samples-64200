======== SAMPLE 1 ========
.Init.Tauto.is_empty> flags X1; elimtype X1


TcDebug (3) > 
Goal:
  
  t : Info.t
  x : X.t
  _x : I.t
  rx : X.t
  rr : tree
  e : (height (Node _x Leaf rx rr) + 2 <? height l) = false
  e2 : (height Leaf <=? height rr) = false
  y : elt
  H : InT y (Node _x Leaf rx rr)
  ============================
   (InT y (Node _x Leaf rx rr))


Debug: Going to execute:
<Coq.Init.Tauto.is_empty> flags X1


TcDebug (3) > 
Goal:
  
  t : Info.t
  x : X.t
  _x : I.t
  rx : X.t
  rr : tree
  e : (height (Node _x Leaf rx rr) + 2 <? height l) = false
  e2 : (height Leaf <=? height rr) = false
  y : elt
  H : InT y (Node _x Leaf rx rr)
  ============================
   (InT y (Node _x Leaf rx rr) /\ ~ InT y Leaf \/ InT y rr)


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_empty@0>


TcDebug (4) > 
Goal:
  
  t : Info.t
  x : X.t
  _x : I.t
  rx : X.t
  rr : tree
  e : (height (Node _x Leaf rx rr) + 2 <? height l) = false
  e2 : (height Leaf <=? height rr) = false
  y : elt
  H : InT y (Node _x Leaf rx rr)
  ============================
   (InT y (Node _x Leaf rx rr) /\ ~ InT y Leaf \/ InT y rr)


Debug: Going to execute:
<tauto_plugin::is_empty@0>


TcDebug (4) > 
Debug: Level 4: evaluation returns
<tactic closure>


Goal:
  
  t : Info.t
  x : X.t
  _x : I.t
  rx : X.t
  rr : tree
  e : (height (Node _x Leaf rx rr) + 2 <? height l) = false
  e2 : (height Leaf <=? height rr) = false
  y : elt
  H : InT y (Node _x Leaf rx rr)
  ============================
   (InT y (Node _x Leaf rx rr) /\ ~ InT y Leaf \/ InT y rr)


Debug:
Going to execute:
<Coq.Init.Tauto.is_empty> flags X1; elimtype X1; assumption


TcDebug (3) > 
Goal:
  
  t : Info.t
  x : X.t
  _x : I.t
  rx : X.t
  rr : tree
  e : (height (Node _x Leaf rx rr) + 2 <? height l) = false
  e2 : (height Leaf <=? height rr) = false
  y : elt
  H : InT y (Node _x Leaf rx rr)
  ============================
   (InT y (Node _x Leaf rx rr) /\ ~ InT y Leaf \/ InT y rr)


Debug: Going to execute:
<Coq.Init.Tauto.is_empty> flags X1; elimtype X1


TcDebug (3) > 
Goal:
  
  t : Info.t
  x : X.t
  _x : I.t
  rx : X.t
  rr : tree
  e : (height (Node _x Leaf rx rr) + 2 <? height l) = false
  e2 : (height Leaf <=? height rr)

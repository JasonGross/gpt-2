======== SAMPLE 1 ========
   (In x s)


Debug: Going to execute:
<ltac_plugin::auto@0> $1 $2 $3 $4


TcDebug (3) > 
Debug: Level 3: Proof is not complete.

Debug: Level 3: No applicable tactic.

Goal:
  
  x : X.t
  a : elt
  l : list elt
  Hrec : forall (s' : t) (x : X.t),  x0 : elt
  Hrec' : forall x1 (x : X.t)           X.eq x x0 -> f x = f x0
  H0 : In x s
  H1 : f x0 = true
  ============================
   (In x s)


Debug: Going to execute:
clear H


TcDebug (2) > 
Goal:
  
  x : X.t
  a : elt
  l : list elt
  Hrec : forall (s' : t) (x : X.t),  x0 : elt
  Hrec' : forall x1 (x : X.t)           X.eq x x0 -> f x = f x0
  H0 : In x s
  H1 : f x0 = true
  ============================
   (In x s)


Debug: Going to execute:
<ltac_plugin::clear@0> $1


TcDebug (2) > 
Debug: Level 2: H: Level 2: f is used in hypothesis H1.

Debug: Level 2: f is used in hypothesis H1.

Debug: Level 2: f is used in hypothesis H1.

Debug: Level 2: f is used in hypothesis H1.

Debug: Level 2: f is used in hypothesis H1.

Debug: Level 2: f is used in hypothesis H1.

Debug: Level 2: f is used in hypothesis H1.

Goal:
  
  x : X.t
  a : elt
  l : list elt
  Hrec : forall (s' : t) (x : X.t),  x0 : elt
  Hrec' : forall x1 (x : X.t)           X.eq x x0 -> f x = f x0
  H0 : In x s
  H1 : f x0 = true
  ============================
   (In x s)


Debug: Going to execute:
OrderTac.order_prepare


TcDebug (2) > 
Goal:
  
  x : X.t
  a : elt
  l : list elt
  Hrec : forall (s' : t) (x : X.t),  x0 : elt
  Hrec' : forall x1 (x : X.t)           X.eq x x0 -> f x = f x0
  H0 : In x s
  H1 : f x0 = true
  ============================
   (In x s)


Debug:
Going to execute:
match goal with
| H:?A -> False
  |- _ => change_no_check (~ A) in H; order_prepare
| H:~ ?R ?x ?y
  |- _ =>
      match R with
      | eq => fail 1
      | _ => compare apply x y; order_prepare
      end
| H:?x <= ?y
  |- _ =>
      match R with
      | eq => fail 1
      | lt => fail 1
      | le => fail 1
      | _ =>
          change_no_check (x == y) in H ||
           apply H x == idtac
      | _ =>
           apply H le == idtac
           apply H (x == y) in H ||
      

======== SAMPLE 1 ========
 rl2 : tree
  H0 : X.eq x y
  H2 : InT x lr
  H3 : X.eq x y
  ============================
   (X.eq x lx \/ InT x lr)


Debug: Going to execute:
exact (id0 id1)


TcDebug (2) > 
Debug: Evaluated term: (cplus lx ld ll)%signature ll

Goal:
  
  ll : tree
  lx : X.t
  ld : elt
  lr : tree
  x : X.t
  H : forall (x : elt) (h : I.t),
       eq (x -> y) (a :: lr)%list <- lx [<=] lr
  H0 : X.eq x y
  H2 : InT x lr
  H3 : X.eq x y
  ============================
   (InT x ll)


Debug: Going to execute:
<ltac_plugin::exact@0> $1


TcDebug (2) > 
Goal:
  
  ll : tree
  lx : X.t
  ld : elt
  lr : tree
  x : X.t
  H : forall (x : elt) (h : I.t),
       eq (x -> y) (a :: lr)%list <- lx [<=] lr
  H3 : X.eq x y
  H0 : X.eq x y
  ============================
   (InT x ll)


Debug: Going to execute:
clear id0


TcDebug (2) > 
Goal:
  
  ll : tree
  lx : X.t
  ld : elt
  lr : tree
  x : X.t
  H : forall (x : elt) (h : I.t),
       eq (x -> y) (a :: lr)%list <- lx [<=] lr
  H3 : X.eq x y
  H0 : X.eq x y
  ============================
   (InT x ll)


Debug: Going to execute:
<ltac_plugin::clear@0> $1


TcDebug (2) > 
Goal:
  
  ll : tree
  lx : X.t
  ld : elt
  lr : tree
  x : X.t
  H : forall (x : elt) (h : I.t),
       eq (x -> y) (a :: lr)%list <- lx [<=] lr
  ============================
   (InT x ll)


Debug: Going to execute:
<Coq.Init.Tauto.not_dep_intros>


TcDebug (1) > 
Goal:
  
  ll : tree
  lx : X.t
  ld : elt
  lr : tree
  x : X.t
  H : forall (x : elt) (h : I.t),
       eq (x -> y) (a :: lr)%list <- lx [<=] lr
  ============================
   (InT x ll)


Debug:
Going to execute:
repeat
 match goal with
 | |- ?X1 -> ?X2 => intro
 | |- ~ _ => unfold not at 1; intro
 end


TcDebug (1) > 
Goal:
  
  ll : tree
  lx : X.t
  ld : elt
  lr : tree
  x : X.t
  H : forall (x : elt) (h : I.t),
       eq (x -> y) (a :: lr)%list <- lx [<=] lr
  ============================
   (InT x ll)


Debug:
Going to execute:
match goal with
| |- ?X1 -> ?X2 => intro
| |- ~ _ => unfold not at 1; intro
end


TcDebug (1) > 
Debug: Level

======== SAMPLE 1 ========
.t
  r1 : tree
  b2 : tree
  H : InT x r1 -> InT x l2'
  H0 : InT x l2'
  H5 : X.eq x y
  ============================
   (X.eq x l2')


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id


TcDebug (4) > 
Goal:
  
  x : t
  r1 : tree
  b2 : tree
  H : InT x r1 -> InT x l2'
  H0 : InT x l2'
  H5 : X.eq x y
  ============================
   (X.eq x l2')


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1


TcDebug (4) > 
Goal:
  
  x : t
  r1 : tree
  b2 : tree
  H : InT x r1 -> InT x l2'
  H0 : InT x l2'
  H5 : X.eq x y
  ============================
   (X.eq x l2')


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_disj@0>


TcDebug (5) > 
Goal:
  
  x : t
  r1 : tree
  b2 : tree
  H : InT x r1 -> InT x l2'
  H0 : InT x l2'
  H5 : X.eq x y
  ============================
   (X.eq x l2')


Debug: Going to execute:
<tauto_plugin::is_disj@0>


TcDebug (5) > 
Debug: Level 5: evaluation returns
<tactic closure>


Goal:
  
  x : t
  r1 : tree
  b2 : tree
  H : InT x r1 -> InT x l2'
  H0 : InT x l2'
  H5 : X.eq x y
  ============================
   (X.eq x l2')


Debug:
Going to execute:
<Coq.Init.Tauto.is_unit_or_eq> flags X1; cut X2;
 [ intro; clear id | cut X1; [ exact id | constructor 1; fail ] ]


TcDebug (4) > 
Goal:
  
  x : t
  r1 : tree
  b2 : tree
  H : InT x r1 -> InT x l2'
  H0 : InT x l2'
  H5 : X.eq x y
  ============================
   (X.eq x l2')


Debug: Going to execute:
<Coq.Init.Tauto.is_unit_or_eq> flags X1; cut X2


TcDebug (4) > 
Goal:
  
  x : t
  r1 : tree
  b2 : tree
  H : InT x r1 -> InT x l2'
  H0 : InT x l2'
  H5 : X.eq x y
  ============================
   (X.eq x l2')


Debug: Going to execute:
<Coq.Init.Tauto.is_unit_or_eq> flags X1


TcDebug (4) > 
Goal:
  
  x : t
  r1 : tree
  b2 : tree
  H : InT x r1 -> InT x l2'
  H0 : InT x l2'
  H5 : X.eq x y
  ============================
   (X.eq x l2')


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_unit_or_eq@0>


TcDebug (5) > 
Goal:
  
  x : t
  r1 : tree
  b2 : tree
  H : InT x r1 -> InT x l2'
  H0 : InT x l2'
  H5 :

======== SAMPLE 1 ========
   (X.eq x x1)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id


TcDebug (2) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  H : In x s -> False
  H0 : Add x s s'
  a : E.t
  H3 : In a s' -> False
  H4 : In a s
  H5 : E.eq x a -> False
  H1 : In a s
  H7 : In a s'
  H6 : E.eq x a \/ In a s'
  H8 : In a s''
  ============================
   (X.eq x x1)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1


TcDebug (2) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  H : In x s -> False
  H0 : Add x s s'
  a : E.t
  H3 : In a s' -> False
  H4 : In a s
  H5 : E.eq x a -> False
  H1 : In a s
  H7 : In a s'
  H6 : E.eq x a \/ In a s'
  H8 : In a s''
  ============================
   (X.eq x x1)


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_disj@0>


TcDebug (3) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  H : In x s -> False
  H0 : Add x s s'
  a : E.t
  H3 : In a s' -> False
  H4 : In a s
  H5 : E.eq x a -> False
  H1 : In a s
  H7 : In a s'
  H6 : E.eq x a \/ In a s'
  H8 : In a s''
  ============================
   (X.eq x x1)


Debug: Going to execute:
<tauto_plugin::is_disj@0>


TcDebug (3) > 
Debug: Level 3: evaluation returns
<tactic closure>


Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  H : In x s -> False
  H0 : Add x s s'
  a : E.t
  H3 : In a s' -> False
  H4 : In a s
  H5 : E.eq x a -> False
  H1 : In a s
  H7 : In a s'
  H6 : E.eq x a \/ In a s'
  H8 : In a s''
  ============================
   (X.eq x x1)


Debug:
Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id; intro; clear id


TcDebug (2) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  H : In x s -> False
  H0 : Add x s s'
  a : E.t
  H3 : In a s' -> False
  H4 : In a s
  H5 : E.eq x a -> False
  H1 : In a s
  H7 : In a s'
  H6 : E.eq x a \/ In a s'
  H8 : In a s''
  ============================
   (X.eq x x1)


Debug: Going to execute:
<Coq.Init.

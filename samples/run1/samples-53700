======== SAMPLE 1 ========
  X.lt f x2 x1


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1


TcDebug (1) > 
Goal:
  
  elt : Type
  k' : key
  e' : elt
  l : list (key * elt)
  k : key
  e : elt
  Hnotin : E.eq k k' -> False
  H : MapsTo k e (of_list l)
  H2 : InA eqke (k, e) l
  H0 : MapsTo k e (of_list l)
  H3 : MapsTo k e l
  ============================
   (E.eq k' k /\ e = e' \/ ~ InA eqke (k, e) l /\ MapsTo k e (of_list l))


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_conj@0>


TcDebug (2) > 
Goal:
  
  elt : Type
  k' : key
  e' : elt
  l : list (key * elt)
  k : key
  e : elt
  Hnotin : E.eq k k' -> False
  H : MapsTo k e (of_list l)
  H2 : InA eqke (k, e) l
  H0 : MapsTo k e (of_list l)
  H3 : MapsTo k e l
  ============================
   (E.eq k' k /\ e = e' \/ ~ InA eqke (k, e) l /\ MapsTo k e (of_list l))


Debug: Going to execute:
<tauto_plugin::is_conj@0>


TcDebug (2) > 
Debug: Level 2: evaluation returns
<tactic closure>


Goal:
  
  elt : Type
  k' : key
  e' : elt
  l : list (key * elt)
  k : key
  e : elt
  Hnotin : E.eq k k' -> False
  H : MapsTo k e (of_list l)
  H2 : InA eqke (k, e) l
  H0 : MapsTo k e (of_list l)
  H3 : MapsTo k e l
  ============================
   (E.eq k' k /\ e = e' \/ ~ InA eqke (k, e) l /\ MapsTo k e (of_list l))


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro; clear id


TcDebug (1) > 
Goal:
  
  elt : Type
  k' : key
  e' : elt
  l : list (key * elt)
  k : key
  e : elt
  Hnotin : E.eq k k' -> False
  H : MapsTo k e (of_list l)
  H2 : InA eqke (k, e) l
  H0 : MapsTo k e (of_list l)
  H3 : MapsTo k e l
  ============================
   (E.eq k' k /\ e = e' \/ ~ InA eqke (k, e) l /\ MapsTo k e (of_list l))


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro


TcDebug (1) > 
Goal:
  
  elt : Type
  k' : key
  e' : elt
  l : list (key * elt)
  k : key
  e : elt
  Hnotin : E.eq k k' -> False
  H : MapsTo k e (of_list l)
  H2 : InA eqke (k, e) l
  H0 : MapsTo k e (of_list l)
  H3 : MapsTo k e l
  ============================
   (E.eq k' k /\ e = e' \/ ~ InA eqke (k,

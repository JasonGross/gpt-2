======== SAMPLE 1 ========
 In y s) -> In y s'
  H4 : In y s'
  H6 : In y s
  ============================
   (false = true)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id


TcDebug (1) > 
Goal:
  
  s : t
  x : elt
  l : list elt
  Hrec : forall (s' : t) (x : elt),
         Ok l -> Ok s' -> In x (union l s') <-> In x l \/ In x s'
  s' : t
  x' : elt
  l' : list elt
  Hrec' : forall x0 : elt,
          Ok (x0 :: l) ->
          Ok l' -> In x0 (union (x0 :: m) l') <-> In x0 (x0 :: l) \/ In x0 l'
  H : X.lt x' x
  x0 : elt
  H0 : Sorted X.lt l'
  H1 : Inf x' l'
  H2 : Sorted X.lt l
  H3 : Inf x l
  H4 : In x0 l'
  ============================
   (false = true)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1


TcDebug (1) > 
Goal:
  
  s : t
  x : elt
  l : list elt
  Hrec : forall (s' : t) (x : elt),
         Ok l -> Ok s' -> In x (union l s') <-> In x l \/ In x s'
  s' : t
  x' : elt
  l' : list elt
  Hrec' : forall x0 : elt,
          Ok (x0 :: l) ->
          Ok l' -> In x0 (union (x0 :: m) l') <-> In x0 (x0 :: l) \/ In x0 l'
  H : X.lt x' x
  x0 : elt
  H0 : Sorted X.lt l'
  H1 : Inf x' l'
  H2 : Sorted X.lt l
  H3 : Inf x l
  H4 : In x0 l'
  ============================
   (false = true)


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_disj@0>


TcDebug (2) > 
Goal:
  
  s : t
  x : elt
  l : list elt
  Hrec : forall (s' : t) (x : elt),
         Ok l -> Ok s' -> In x (union l s') <-> In x l \/ In x s'
  s' : t
  x' : elt
  l' : list elt
  Hrec' : forall x0 : elt,
          Ok (x0 :: l) ->
          Ok l' -> In x0 (union (x0 :: m) l') <-> In x0 (x0 :: l) \/ In x0 l'
  H : X.lt x' x
  x0 : elt
  H0 : Sorted X.lt l'
  H1 : Inf x' l'
  H2 : Sorted X.lt l
  H3 : Inf x l
  H4 : In x0 l'
  ============================
   (false = true)


Debug: Going to execute:
<tauto_plugin::is_disj@0>


TcDebug (2) > 
Debug: Level 2: evaluation returns
<tactic closure>


Goal:
  
  s : t
  x : elt
  l : list elt
  Hrec : forall (s' : t) (x : elt),
  

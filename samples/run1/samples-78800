======== SAMPLE 1 ========
_2 :: lrr _x2)
  y : key
  d : elt
  H : X.eq y rx
  ============================
   (X.eq y x \/ In y s)


Debug: Going to execute:
<Coq.Init.Tauto.is_empty> flags X1


TcDebug (3) > 
Goal:
  
  elt : Type
  x : key
  l : t elt
  y : key
  d : elt
  H : X.eq y x
  ============================
   (X.eq y x \/ In y s)


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_empty@0>


TcDebug (4) > 
Goal:
  
  elt : Type
  x : key
  l : t elt
  y : key
  d : elt
  H : X.eq y x
  ============================
   (X.eq y x \/ In y s)


Debug: Going to execute:
<tauto_plugin::is_empty@0>


TcDebug (4) > 
Debug: Level 4: evaluation returns
<tactic closure>


Goal:
  
  elt : Type
  x : key
  l : t elt
  y : key
  d : elt
  H : X.eq y x
  ============================
   (X.eq y x \/ In y s)


Debug:
Going to execute:
<Coq.Init.Tauto.is_empty> flags X1; elimtype X1; assumption


TcDebug (3) > 
Goal:
  
  elt : Type
  x : key
  l : t elt
  y : key
  d : elt
  H : X.eq y x
  ============================
   (X.eq y x \/ In y s)


Debug: Going to execute:
<Coq.Init.Tauto.is_empty> flags X1; elimtype X1


TcDebug (3) > 
Goal:
  
  elt : Type
  x : key
  l : t elt
  y : key
  d : elt
  H : X.eq y x
  ============================
   (X.eq y x \/ In y s)


Debug: Going to execute:
<Coq.Init.Tauto.is_empty> flags X1


TcDebug (3) > 
Goal:
  
  elt : Type
  x : key
  l : t elt
  y : key
  d : elt
  H : X.eq y x
  ============================
   (X.eq y x \/ In y s)


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_empty@0>


TcDebug (4) > 
Goal:
  
  elt : Type
  x : key
  l : t elt
  y : key
  d : elt
  H : X.eq y x
  ============================
   (X.eq y x \/ In y s)


Debug: Going to execute:
<tauto_plugin::is_empty@0>


TcDebug (4) > 
Debug: Level 4: evaluation returns
<tactic closure>


Goal:
  
  elt : Type
  x : key
  l : t elt
  y : key
  d : elt
  H : X.eq y x
  ============================
   (X.eq y x \/ In y s)


Debug:
Going to execute:
<Coq.Init.Tauto.is_empty> flags X1; elimtype X1; assumption


TcDebug (3) > 
Goal:
  
  elt : Type
  x : key
  l : t elt
  y : key
  d : elt
  H : X.eq y x
  ============================
   (X.eq y x \/ In y s)


Debug: Going to execute:
<Co

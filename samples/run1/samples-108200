======== SAMPLE 1 ========
  s' : t
  s'' : t
  x : E.t
  a : E.t
  H1 : In a s' -> E.eq x a \/ In a s
  H5 : In x s -> In x s'
  H3 : In x s'
  H0 : True
  H2 : E.eq x a -> In a s'
  H6 : In a s -> In a s'
  H7 : In a s
  H8 : In a s''
  H7 : E.eq x a
  ============================
   (In a s' /\ In a s'')


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id; intro


TcDebug (2) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : E.t
  a : E.t
  H1 : In a s' -> E.eq x a \/ In a s
  H5 : In x s -> In x s'
  H3 : In x s'
  H0 : True
  H2 : E.eq x a -> In a s'
  H6 : In a s -> In a s'
  H7 : In a s
  H8 : In a s''
  H7 : E.eq x a
  ============================
   (In a s' /\ In a s'')


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id


TcDebug (2) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : E.t
  a : E.t
  H1 : In a s' -> E.eq x a \/ In a s
  H5 : In x s -> In x s'
  H3 : In x s'
  H0 : True
  H2 : E.eq x a -> In a s'
  H6 : In a s -> In a s'
  H7 : In a s
  H8 : In a s''
  H7 : E.eq x a
  ============================
   (In a s' /\ In a s'')


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1


TcDebug (2) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : E.t
  a : E.t
  H1 : In a s' -> E.eq x a \/ In a s
  H5 : In x s -> In x s'
  H3 : In x s'
  H0 : True
  H2 : E.eq x a -> In a s'
  H6 : In a s -> In a s'
  H7 : In a s
  H8 : In a s''
  H7 : E.eq x a
  ============================
   (In a s' /\ In a s'')


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_disj@0>


TcDebug (3) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : E.t
  a : E.t
  H1 : In a s' -> E.eq x a \/ In a s
  H5 : In x s -> In x s'
  H3 : In x s'
  H0 : True
  H2 : E.eq x a -> In a s'
  H6 : In a s -> In a s'
  H7 : In a s
  H8 : In a s''
  H7 : E.eq x a
  ============================
   (In a s' /\ In a s'')


Debug: Going to execute:
<tauto_plugin::is_disj@0>


TcDebug (3) > 
Debug: Level 3: evaluation returns
<tactic closure>


Goal:
  
  s : t
  s' : t
  s'' :

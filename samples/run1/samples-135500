======== SAMPLE 1 ========
id, ?pfs_key = pfs_key ||
              match or_clause (pfs_key ?pfs_key) _res1 with
              | Some cl => cl :: option_clause (pfs_key ?pfs_key) _res2
              | None => None
              end) pfs) :: acc)
         (FEsub (FEsub (FEadd (FEX Q 1) (FEX Q 2)) (FEadd (FEX Q 3)) (FEc (-1))))) ==
          (FEadd (FEsub (FEopp (FEX Q 3)) (FEX Q 2)) (FEc (-1)))))


Debug: Going to execute:
try rewrite <- rev_add_assoc


TcDebug (0) > 
Goal:
  
  elt : Type
  x : X.t
  l : t elt
  y : key
  d : elt
  r : t elt
  _x : I.t
  _x0 : X.lt x y
  H : avl l
  H2 : avl r
  H1 : avl (remove x r)
  ============================
   (- (2) <= height l - height r <= 2 ->
    0 <= height r - height (remove x r) <= 1 ->
    (avl r -> avl (remove x r) /\ 0 <= height r - height (remove x r) <= 1) ->
    _x == max (height l) (height r) + 1 ->
    (- (3) <= height (remove x r) - height r <= 3 ->
     0 <= height (bal (remove x r) y d r) - max (height (remove x r)) (height r) <=
     1) ->
    (- (2) <= height (remove x r) - height (remove x r) <= 2 ->
     height (bal (remove x r) y d r) ==
     max (height (remove x r)) (height r) + 1) ->
    0 <= height r - height (remove x r) <= 1)


Goal:
  
  elt : Type
  x : X.t
  l : t elt
  y : key
  d : elt
  r : t elt
  _x : I.t
  _x0 : X.lt x y
  H : avl l
  H2 : avl r
  H1 : avl (remove x r)
  ============================
   (- (2) <= height l - height r <= 2 ->
    0 <= height r - height (remove x r) <= 1 ->
    (avl r -> avl (remove x r) /\ 0 <= height r - height (remove x r) <= 1) ->
    _x == max (height l) (height r) + 1 ->
    (- (3) <= height (remove x r) - height r <= 3 ->
     0 <= height (bal (remove x r) y d r) - max (height (remove x r)) (height r) <=
     1) ->
    (- (2) <= height (remove x r) - height (remove x r) <= 2 ->
     height (bal (remove x r) y d r) ==
     max (height (remove x r)) (height r) + 1) ->
    0 <= height r - height (remove x r) <= 1)


Debug: Going to execute:
rewrite <- rev_add_assoc


TcDebug (0) > 
Debug: Evaluated term: rev_add_assoc

Debug: Evaluated term: rev_add_assoc

Goal:
  
  elt : Type
  x : X.t
  l : t elt
  y : key
  d : elt
  r : t elt
  _x : I.t
  _x0 : X.lt x y
  H : avl l
  H2

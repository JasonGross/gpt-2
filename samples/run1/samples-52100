======== SAMPLE 1 ========
j> flags X1; elim id


TcDebug (3) > 
Goal:
    d : positive
  ============================
   (D3 (D3 d)))


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1


TcDebug (3) > 
Goal:
    d : positive
  ============================
   (D3 (D3 d)))


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_conj@0>


TcDebug (4) > 
Goal:
    d : positive
  ============================
   (D3 (D3 d)))


Debug: Going to execute:
<tauto_plugin::is_conj@0>


TcDebug (4) > 
Debug: Level 4: evaluation returns
<tactic closure>


Goal:
    d : positive
  ============================
   (D3 (D3 d)))


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro; clear id


TcDebug (3) > 
Goal:
    d : positive
  ============================
   (D3 (D3 d)))


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro


TcDebug (3) > 
Goal:
    d : positive
  ============================
   (D3 (D3 d)))


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id


TcDebug (3) > 
Goal:
    d : positive
  ============================
   (D3 (D3 d)))


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1


TcDebug (3) > 
Goal:
    d : positive
  ============================
   (D3 (D3 d)))


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_conj@0>


TcDebug (4) > 
Goal:
    d : positive
  ============================
   (D3 (D3 d)))


Debug: Going to execute:
<tauto_plugin::is_conj@0>


TcDebug (4) > 
Debug: Level 4: evaluation returns
<tactic closure>


Goal:
    d : positive
  ============================
   (D3 (D3 d)))


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro; clear id


TcDebug (3) > 
Goal:
    d : positive
  ============================
   (D3 (D3 d)))


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro


TcDebug (3) > 
Goal:
    d : positive
  ============================
   (D3 (D3 d)))


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id


TcDebug (3) > 
Goal:
    d : positive
  ============================
   (D3 (D3 d)))


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1


TcDebug (3) > 
Goal:
    d : positive
  ============================
   (D3 (D3 d)))


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_conj@0>


TcDebug (4) > 
Goal:
    d : positive
  ============================
   (D3 (D3 d)))




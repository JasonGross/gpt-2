======== SAMPLE 1 ========
 z
  IHf1 : forall (pol : bool) (env : Env),
         eval_cnf env (xcnf pol f2) ->
         eval_f (fun x : Prop => x) (eval env) (if pol then f2 else N f1)
  env : Env
  c : clause
  H : eval_cnf env (xcnf true f2)
  H0 : eval_f (fun x : Prop => x) (eval env) f2
  H1 : eval_f (fun x : Prop => x) (eval env) f2
  ============================
   (eval_f (fun x : Prop => x) (eval env) f2)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id; intro


TcDebug (1) > 
Goal:
  
  Env : Type
  Term : Type
  Term' : Type
  Annot : Type
  unsat : Term' -> bool
  deduce : Term' -> Term' -> option Term'
  normalise : Term -> Annot -> cnf
  negate : Term -> Annot -> cnf
  eval' : Env -> Term' -> Prop
  no_middle_eval' : forall (env : Env) (d : Term'),
                   eval' env d \/ ~ eval' env d
  unsat_prop : forall t : Term',
              unsat t = true -> forall env : Env, eval' env t -> False
  deduce_prop : forall t t' u : Term',
               deduce t t' = Some u ->
               forall env : Env, eval' env t -> eval' env t' -> eval' env u
  env : Env
  c : clause
  H : eval_cnf env (xcnf true f2)
  H0 : eval_f (fun x : Prop => x) (eval env) f2
  H1 : eval_f (fun x : Prop => x) (eval env) f2
  ============================
   (eval_f (fun x : Prop => x) (eval env) f2)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id


TcDebug (1) > 
Goal:
  
  Env : Type
  Term : Type
  Term' : Type
  Annot : Type
  unsat : Term' -> bool
  deduce : Term' -> Term' -> option Term'
  normalise : Term -> Annot -> cnf
  negate : Term -> Annot -> cnf
  eval' : Env -> Term' -> Prop
  no_middle_eval' : forall (env : Env) (d : Term'),
                   eval' env d \/ ~ eval' env d
  unsat_prop : forall t : Term',
              unsat t = true -> forall env : Env, eval' env t -> False
  deduce_prop : forall t t' u : Term',
                deduce t t' = Some u ->
               forall env : Env, eval' env t -> eval' env t' -> eval' env u
  env : Env
  c : clause
  H : eval_cnf env (xcnf true f2)
  H0 : eval_f (fun x : Prop => x) (eval env) f2
  H1 : eval_f (fun x : Prop => x) (eval env) f2
  ============================
   (eval_f (fun x : Prop => x) (eval env) f2)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1


TcDebug (1

======== SAMPLE 1 ========
:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro


TcDebug (3) > 
Goal:
  
  x : positive
  s1 : tree
  b : bool
  s2 : tree
  s'1 : tree
  b0 : bool
  s'2 : tree
  H0 : mem x s'2 = true
  ============================
   (mem x s1 = true)


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id


TcDebug (3) > 
Goal:
  
  x : positive
  s1 : tree
  b : bool
  s2 : tree
  s'1 : tree
  b0 : bool
  s'2 : tree
  H0 : mem x s'2 = true
  ============================
   (mem x s1 = true)


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1


TcDebug (3) > 
Goal:
  
  x : positive
  s1 : tree
  b : bool
  s2 : tree
  s'1 : tree
  b0 : bool
  s'2 : tree
  H0 : mem x s'2 = true
  ============================
   (mem x s1 = true)


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_conj@0>


TcDebug (4) > 
Goal:
  
  x : positive
  s1 : tree
  b : bool
  s2 : tree
  s'1 : tree
  b0 : bool
  s'2 : tree
  H0 : mem x s'2 = true
  ============================
   (mem x s1 = true)


Debug: Going to execute:
<tauto_plugin::is_conj@0>


TcDebug (4) > 
Debug: Level 4: evaluation returns
<tactic closure>


Goal:
  
  x : positive
  s1 : tree
  b : bool
  s2 : tree
  s'1 : tree
  b0 : bool
  s'2 : tree
  H0 : mem x s'2 = true
  ============================
   (mem x s1 = true)


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro; clear id


TcDebug (3) > 
Goal:
  
  x : positive
  s1 : tree
  b : bool
  s2 : tree
  s'1 : tree
  b0 : bool
  s'2 : tree
  H0 : mem x s'2 = true
  ============================
   (mem x s1 = true)


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro


TcDebug (3) > 
Goal:
  
  x : positive
  s1 : tree
  b : bool
  s2 : tree
  s'1 : tree
  b0 : bool
  s'2 : tree
  H0 : mem x s'2 = true
  ============================
   (mem x s1 = true)


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id


TcDebug (3) > 
Goal:
  
  x : positive
  s1 : tree
  b : bool
  s2 : tree
  s'1 : tree
  b0 : bool
  s'2 : tree
  H0 : mem x s'2 = true
  ============================
   (mem x s1 = true)


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1


TcDebug (3) > 
Goal:
  
  x : positive
  s1 : tree
  b : bool
  s2 : tree
  s'1 :

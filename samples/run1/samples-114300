======== SAMPLE 1 ========
 (x : X.t) (m : t elt),
           bst m ->
           find x (mapl m) =
           match find x m with
           | Some d => f0 x (Some d) None
           | None => None
           end
  mapr_f0 : forall (x : X.t) (m' : t elt'),
           bst m' ->
           find x (mapr m') =
           match find x m' with
           | Some d' => f0 x None (Some d')
           | None => None
           end
  f0_compat : forall (x x' : X.t) (o : option elt) (o' : option elt'),
             X.eq x x' -> f0 x o o' = f0 x' o o'
  l1 : t elt
  x1 : key
  d1 : elt
  r1 : t elt
  _x : int
  l2' : t elt'
  o2 : option elt'
  r2' : t elt'
  m2 : t elt'
  e1 : split x1 m2 = << l2', o2, r2' >>
  e2 : elt''
  e3 : f x1 d1 o2 = Some e2
  IHt1 : forall y : key,
         bst l1 -> bst l2' -> In y (map2_opt l1 l2') -> In y l1 \/ In y l2'
  IHt0 : forall y : key,
         bst r1 -> bst r2' -> In y (map2_opt r1 r2') -> In y r1 \/ In y r2'
  y : key
  H0 : bst m2
  H' : In y (map2_opt r1 r2')
  H4 : bst l2'
  H5 : bst r2'
  H6 : bst l1
  H7 : bst r1
  H8 : lt_tree x1 l1
  H9 : gt_tree x1 r1
  H : In y r2'
  H1 : In y l2' -> In y m2 /\ X.lt y x1
  H10 : In y m2 /\ X.lt y x1 -> In y l2'
  H2 : In y r2' -> In y m2 /\ X.lt x1 y
  H11 : In y m2 /\ X.lt x1 y -> In y r2'
  ============================
   (In y (Node l1 x1 d1 r1 _x) \/ In y m2)


Debug: Going to execute:
<tauto_plugin::is_conj@0>


TcDebug (2) > 
Debug: Level 2: evaluation returns
<tactic closure>


Goal:
  
  elt : Type
  elt' : Type
  elt'' : Type
  f0 : key -> option elt -> option elt' -> option elt''
  f : key -> elt -> option elt' -> option elt''
  mapl : t elt -> t elt''
  mapr : t elt' -> t elt''
  f0_f : forall (x : key) (d : elt) (o : option elt'),
         f x d o = f0 x (Some d) o
  mapl_bst : forall m : t elt, bst m -> bst (mapl m)
  mapr_bst : forall m' : t elt', bst m' -> bst (mapr m')
  mapl_f0 :

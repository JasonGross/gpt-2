======== SAMPLE 1 ========
       Ok (Bk rl rx rr) ->
        InT y (del x (Bk rl rx rr)) <->
        InT y (Bk rl rx rr) /\ (X.eq y x -> False)
  x : X.t
  y : elt
  H0 : X.lt rx rx
  H1 : InT y (Bk rl rx rr)
  H2 : X.eq y x -> False
  ============================
   (InT y rl \/ X.eq y rx \/ InT y rr)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id; intro


TcDebug (2) > 
Goal:
  
  i : Color.t
  l : tree
  x' : X.t
  rl : tree
  rx : X.t
  rr : tree
  IHl : forall (x : X.t) (y : elt),
        Ok l -> InT y (del x l) <-> InT y l /\ (X.eq y x -> False)
  IHr : forall (x : X.t) (y : elt),
        Ok (Bk rl rx rr) ->
        InT y (del x (Bk rl rx rr)) <->
        InT y (Bk rl rx rr) /\ (X.eq y x -> False)
  x : X.t
  y : elt
  H0 : X.lt rx rx
  H1 : InT y (Bk rl rx rr)
  H2 : X.eq y x -> False
  ============================
   (InT y rl \/ X.eq y rx \/ InT y rr)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id


TcDebug (2) > 
Goal:
  
  i : Color.t
  l : tree
  x' : X.t
  rl : tree
  rx : X.t
  rr : tree
  IHl : forall (x : X.t) (y : elt),
        Ok l -> InT y (del x l) <-> InT y l /\ (X.eq y x -> False)
  IHr : forall (x : X.t) (y : elt),
        Ok (Bk rl rx rr) ->
        InT y (del x (Bk rl rx rr)) <->
        InT y (Bk rl rx rr) /\ (X.eq y x -> False)
  x : X.t
  y : elt
  H0 : X.lt rx rx
  H1 : InT y (Bk rl rx rr)
  H2 : X.eq y x -> False
  ============================
   (InT y rl \/ X.eq y rx \/ InT y rr)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1


TcDebug (2) > 
Goal:
  
  i : Color.t
  l : tree
  x' : X.t
  rl : tree
  rx : X.t
  rr : tree
  IHl : forall (x : X.t) (y : elt),
        Ok l -> InT y (del x l) <-> InT y l /\ (X.eq y x -> False)
  IHr : forall (x : X.t) (y : elt),
        Ok (Bk rl rx rr) ->
        InT y (del x (Bk rl rx rr

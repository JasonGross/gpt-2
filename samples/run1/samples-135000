======== SAMPLE 1 ========
riv_div 0 1 Qeq_bool) ring_subst_niter list_hyp_norm pe =
               npe ->
                (Ring_polynom.PEeval 0 1 Qplus Qmult Qminus Qopp
                   (IDphi (R:=Q)) Z.of_N Qpower
                   (n # 1 :: xn (Pos.to_nat 4) :: nil) pe ==
                 Ring_polynom.Pphi_pow 0 1 Qplus Qmult Qminus Qopp 0 1
                   Qeq_bool (IDphi (R:=Q)) Z.of_N Qpower
                   (get_sign_None (C:=Q)) (n # 1 :: xn (Pos.to_nat 4) :: nil)
                   npe)%Q
  res := Ring_polynom.PX (Ring_polynom.Pc 1) 1
           (Ring_polynom.Pinj 1
              (Ring_polynom.PX (Ring_polynom.Pc (-1)) 1
                 (Ring_polynom.Pc 0)))) : Ring_polynom.Pol Q
  res_eq : Ring_polynom.norm_subst 0 1 Qplus Qmult Qminus Qopp Qeq_bool
              (triv_div 0 1 Qeq_bool) ring_subst_niter list_hyp_norm
              (Ring_polynom.PEmul (Ring_polynom.PEX Q 1) (Ring_polynom.PEX Q 2)) = res
  thm : (Ring_polynom.PEeval 0 1 Qplus Qmult Qminus Qopp 
            (IDphi (R:=Q)) Z.of_N Qpower
            (n # 1 :: xn (Pos.to_nat 4) :: nil)
            (Ring_polynom.PEmul (Ring_polynom.PEX Q 1) (Ring_polynom.PEX Q 2)) ==
         Ring_polynom.Pphi_pow 0 1 Qplus Qmult Qminus Qopp 0 1 Qeq_bool
            (IDphi (R:=Q)) Z.of_N Qpower (get_sign_None (C:=Q))
            (n # 1 :: xn (Pos.to_nat 4) :: nil) res)%Q
  ============================
   (n # 1 == n # 1)%Q


Debug:
Going to execute:
fun H =>
  let simpl_ring H := protect HcondUES := discriminate in H; inversion_plugin
   proj1_sig H in hypothesis proof by case H; clear HcondUES; subst *


TcDebug (0) : Type
   :actionDate 1994
  has value 
{| hypo_type := _; hypo_proof := ?p |}


Debug:
Going to execute:
let simpl_ring H := protect HcondUES := discriminate in H; inversion_plugin

 in proj1_sig H in hypothesis proof by case H; clear HcondUES; subst *


TcDebug (0) : Type
   :actionDate 1994
  has value 
{| hypo_type := _; hypo_proof := ?p |}


Debug:
Going to execute:
let simpl_ring H := protect HcondUES := discriminate in H; inversion_plugin

 in proj1_sig H in hypothesis proof by case H; clear H

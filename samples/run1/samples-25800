======== SAMPLE 1 ========
: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1


TcDebug (3) > 
Goal:
  
  d : uint
  IH1 : of_lu (Little.double d) = 2 * of_lu (Little.succ_double d) + 1
  IH2 : of_lu (Little.succ_double d) = 3 * of_lu (Little.succ_double d) + 1
  ============================
   (0 + 10 * of_lu d = 0)


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_conj@0>


TcDebug (4) > 
Goal:
  
  d : uint
  IH1 : of_lu (Little.double d) = 2 * of_lu (Little.succ_double d) + 1
  IH2 : of_lu (Little.succ_double d) = 3 * of_lu (Little.succ_double d) + 1
  ============================
   (0 + 10 * of_lu d = 0)


Debug: Going to execute:
<tauto_plugin::is_conj@0>


TcDebug (4) > 
Debug: Level 4: evaluation returns
<tactic closure>


Goal:
  
  d : uint
  IH1 : of_lu (Little.double d) = 2 * of_lu (Little.succ_double d) + 1
  IH2 : of_lu (Little.succ_double d) = 3 * of_lu (Little.succ_double d) + 1
  ============================
   (0 + 10 * of_lu d = 0)


Debug:
Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id; intro; clear id


TcDebug (3) > 
Goal:
  
  d : uint
  IH1 : of_lu (Little.double d) = 2 * of_lu (Little.succ_double d) + 1
  IH2 : of_lu (Little.succ_double d) = 3 * of_lu (Little.succ_double d) + 1
  ============================
   (0 + 10 * of_lu d = 0)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id; intro


TcDebug (3) > 
Goal:
  
  d : uint
  IH1 : of_lu (Little.double d) = 2 * of_lu (Little.succ_double d) + 1
  IH2 : of_lu (Little.succ_double d) = 3 * of_lu (Little.succ_double d) + 1
  ============================
   (0 + 10 * of_lu d = 0)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id


TcDebug (3) > 
Goal:
  
  d : uint
  IH1 : of_lu (Little.double d) = 2 * of_lu (Little.succ_double d) + 1
  IH2 : of_lu (Little.succ_double d) = 3 * of_lu (Little.succ_double d) + 1
  ============================
   (0 + 10 * of_lu d = 0)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1


TcDebug (3) > 
Goal:
  
  d : uint
  IH1 : of_lu (Little.double d) = 2 * of_lu (Little.succ_double d) + 1
  IH2 : of_lu (Little.succ_double d) = 3 * of_lu (Little.succ_double d) + 1
  ============================
   (0 + 10 * of_lu d = 0)


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_disj@0>


TcDebug (4) > 


======== SAMPLE 1 ========
 :
   ============================
   (forall s' : t,
    In x (union s s') [=] add x (union s s') \/ false = true)


Debug:
Going to execute:
exact (id0 id1)


TcDebug (1) > 
Debug: Evaluated term: (f x)

Goal:
  
  ============================
   (forall s' : t,
    In x (union s s') [=] add x (union s s') \/ false = true)


Debug: Going to execute:
<ltac_plugin::exact@0> $1


TcDebug (1) > 
Goal:
    s : t
  ============================
   (forall
    (union s s')
      (fold (remove x s) s -> false = true) ->
     In x (union s s') [=] add x (union s s') -> true = false)


Debug:
Going to execute:
match goal with
| H:forall x : X.t, _, _:~ _ <-> X.eq x x \/ In x s <-> In x (union s s')
  |- _ => clear H; X.eq x t1 |- _ => fail 1
| _ =>
    (In x (union s s') [=] add x (union s s') -> true = true)
end


TcDebug (0) > 
Goal:
    s : t
  ============================
   (forall
    (union s s')
      (fold (remove x s) s -> false = true) ->
     In x (union s s') [=] add x (union s s') -> true = false)


Debug:
Going to execute:
match goal with
| H:forall x : X.t, _, _:~ _ <-> X.eq x x \/ In x s <-> In x (union s s')
  |- _ => clear H; X.eq x t1 |- _ => fail 1
| _ =>
    (In x (union s s') [=] add x (union s s') -> true = false)
end


TcDebug (0) > 
Goal:
    s : t
  ============================
   (forall
    (union s s')
      (fold (remove x s) s -> false = true) ->
     In x (union s s') [=] add x (union s s') -> true = false)


Debug: Going to execute:
clear H; X.eq x t1


TcDebug (1) > 
Goal:
    s : t
  ============================
   (forall
    (union s s')
      (fold (remove x s) s -> false = true) ->
     In x (union s s') [=] add x (union s s') -> true = false)


Debug: Going to execute:
clear H


TcDebug (1) > 
Goal:
    s : t
  ============================
   (forall
    (union s s')
      (fold (remove x s) s -> false = true) ->
     In x (union s s') [=] add x (union s s') -> true = false)


Debug: Going to execute:
<ltac_plugin::clear@0> $1


TcDebug (1) > 
Goal:
    s : t  s' : t  s'' : t  a : E.t
  ============================
   (forall (x : elt) (x0 : t), In x (union s (union s' : t)) -> In x s' /\ In x s''))


Debug:
Going to execute:
match goal with
| |- context [ match ?x with
               | _ => _
               end ] => is_var x; destruct x
end


TcDebug (0) > 
Goal

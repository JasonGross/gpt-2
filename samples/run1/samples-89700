======== SAMPLE 1 ========
tactic closure>


Debug: Level 18: evaluation returns
<tactic closure>


Goal:
    s : t  s' : t  s'' : t  a : E.t  H : In a s \/ In a s' \/ In a s''
  ============================
   ((In a s' \/ In a s'' -> In a s \/ In a s'') \/ In a s' \/ In a s'')


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id; intro


TcDebug (2) > 
Goal:
    s : t  s' : t  s'' : t  a : E.t  H : In a s \/ In a s' \/ In a s''
  ============================
   ((In a s' \/ In a s'' -> In a s \/ In a s'') \/ In a s' \/ In a s'')


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id


TcDebug (2) > 
Goal:
    s : t  s' : t  s'' : t  a : E.t  H : In a s \/ In a s' \/ In a s''
  ============================
   ((In a s' \/ In a s'' -> In a s \/ In a s'') \/ In a s' \/ In a s'')


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1


TcDebug (2) > 
Goal:
    s : t  s' : t  s'' : t  a : E.t  H : In a s \/ In a s' \/ In a s''
  ============================
   ((In a s' \/ In a s'' -> In a s \/ In a s'') \/ In a s' \/ In a s'')


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_disj@0>


TcDebug (3) > 
Goal:
    s : t  s' : t  s'' : t  a : E.t  H : In a s \/ In a s' \/ In a s''
  ============================
   ((In a s' \/ In a s'' -> In a s \/ In a s'') \/ In a s' \/ In a s'')


Debug: Going to execute:
<tauto_plugin::is_disj@0>


TcDebug (3) > 
Debug: Level 3: evaluation returns
<tactic closure>


Goal:
    s : t  s' : t  s'' : t  a : E.t  H : In a s \/ In a s' \/ In a s''
  ============================
   ((In a s' \/ In a s'' -> In a s \/ In a s'') \/ In a s' \/ In a s'')


Debug:
Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id; intro; clear id


TcDebug (2) > 
Goal:
    s : t  s' : t  s'' : t  a : E.t  H : In a s \/ In a s' \/ In a s''
  ============================
   ((In a s' \/ In a s'' -> In a s \/ In a s'') \/ In a s' \/ In a s'')


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id; intro


TcDebug (2) > 
Goal:
    s : t  s' : t  s'' : t  a : E.t  H : In a s \/ In a s' \/ In a s''
  ============================
   ((In a s' \/ In a s'' -> In a s \/ In a s'') \/ In a s' \/ In a s'')



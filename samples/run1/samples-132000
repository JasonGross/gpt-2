======== SAMPLE 1 ========
   InT y l1 /\ ~ X.eq y x1 \/ X.eq y x2 \/ InT y r1)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id


TcDebug (1) > 
Goal:
    x1 : X.t  x2 : X.t  x : X.t  y1 : X.t  y2 : X.t  y3 : X.t  H0 : X.eq y x2  H1 : InT y (Node c2 l2 x2 r2)
  ============================
   (X.eq y x2)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1


TcDebug (1) > 
Goal:
    x1 : X.t  x2 : X.t  x : X.t  y1 : X.t  y2 : X.t  y3 : X.t  H0 : X.eq y x2  H1 : InT y (Node c2 l2 x2 r2)
  ============================
   (X.eq y x2)


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_disj@0>


TcDebug (2) > 
Goal:
    x1 : X.t  x2 : X.t  x : X.t  y1 : X.t  y2 : X.t  y3 : X.t  H0 : X.eq y x2  H1 : InT y (Node c2 l2 x2 r2)
  ============================
   (X.eq y x2)


Debug: Going to execute:
<tauto_plugin::is_disj@0>


TcDebug (2) > 
Debug: Level 2: evaluation returns
<tactic closure>


Goal:
    x1 : X.t  x2 : X.t  x : X.t  y1 : X.t  y2 : X.t  y3 : X.t  H0 : X.eq y x2  H1 : InT y (Node c2 l2 x2 r2)
  ============================
   (X.eq y x2)


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; split


TcDebug (1) > 
Goal:
    x1 : X.t  x2 : X.t  x : X.t  y1 : X.t  y2 : X.t  y3 : X.t  H0 : X.eq y x2  H1 : InT y (Node c2 l2 x2 r2)
  ============================
   (X.eq y x2)


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1


TcDebug (1) > 
Goal:
    x1 : X.t  x2 : X.t  x : X.t  y1 : X.t  y2 : X.t  y3 : X.t  H0 : X.eq y x2  H1 : InT y (Node c2 l2 x2 r2)
  ============================
   (X.eq y x2)


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_conj@0>


TcDebug (2) > 
Goal:
    x1 : X.t  x2 : X.t  x : X.t  y1 : X.t  y2 : X.t  y3 : X.t  H0 : X.eq y x2  H1 : InT y (Node c2 l2 x2 r2)
  ============================
   (X.eq y x2)


Debug: Going to execute:
<tauto_plugin::is_conj@0>


TcDebug (2) > 
Debug: Level 2: evaluation returns
<tactic closure>


Debug: Level 0: No matching clauses for match.



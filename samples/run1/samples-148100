======== SAMPLE 1 ========
t, In a s -> In a s'
  H0 : In a s
  H3 : In a s'
  ============================
   (In a s')


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro


TcDebug (2) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  a : E.t
  Ha1 : List.In a (elements s)
  Ha2 : eqb x a = true
  H1 : In x s -> false = true
  H2 : false = true -> In x s
  H : In x s -> exists y : E.t, In y s'
  H5 : E.eq x a -> False
  H4 : In x s'
  H5 : E.eq x a
  H3 : In a s'
  ============================
   (In a s')


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id


TcDebug (2) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  a : E.t
  Ha1 : List.In a (elements s)
  Ha2 : eqb x a = true
  H1 : In x s -> false = true
  H2 : false = true -> In x s
  H : In x s -> exists y : E.t, In y s'
  H5 : E.eq x a -> False
  H4 : In x s'
  H5 : E.eq x a
  H3 : In a s'
  ============================
   (In a s')


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1


TcDebug (2) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  a : E.t
  Ha1 : List.In a (elements s)
  Ha2 : eqb x a = true
  H1 : In x s -> false = true
  H2 : false = true -> In x s
  H : In x s -> exists y : E.t, In y s'
  H5 : E.eq x a -> False
  H4 : In x s'
  H5 : E.eq x a
  H3 : In a s'
  ============================
   (In a s')


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_conj@0>


TcDebug (3) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  a : E.t
  Ha1 : List.In a (elements s)
  Ha2 : eqb x a = true
  H1 : In x s -> false = true
  H2 : false = true -> In x s
  H : In x s -> exists y : E.t, In y s'
  H5 : E.eq x a -> False
  H4 : In x s'
  H5 : E.eq x a
  H3 : In a s'
  ============================
   (In a s')


Debug: Going to execute:
<tauto_plugin::is_conj@0>


TcDebug (3) > 
Debug: Level 3: evaluation returns
<tactic closure>


Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  a : E.t
  Ha1 : List.In a (elements s)
  Ha2 : eqb x a = true
  H1 : In x s -> false = true
  H2 : false

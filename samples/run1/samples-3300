======== SAMPLE 1 ========

 > 
  e2 : Sorted X.lt (rev l1 ->
         Ok (Rd ll l1) ->
          Ok (Rd ll l2) ->
           Ok ->
           (elt:X.eq x y -> y * z -> t_left y t1 \/ y * z)
  H : X.eq x y -> negb (X.eq x y)
  t0 : E.t
  H2 : InT y i
  X0 : elt a -> InT y l1
  X1 : E.eq y x -> InT y l2
  H4 : InT y r
  H1 : E.eq y x -> False
  ============================
   False


Debug: Going to execute:
<tauto_plugin::is_empty@0>


TcDebug (3) > 
Debug: Level 3: evaluation returns
<tactic closure>


Goal:
  
  i : Color.t
  ll : tree
  lx : X.t
  lr : tree
  x' : X.t
  r1 : tree
  r2 : tree
  r3 : tree
  e : elt
  H0 : InT x lr -> InT x (Node ll lx lr)
  H2 : InT y i
  X0 : elt a -> InT y l1
  X1 : E.eq y x -> InT y l2
  H4 : InT y r
  H1 : E.eq y x -> False
  ============================
   False


Debug:
Going to execute:
<Coq.Init.Tauto.is_empty> flags X1; elimtype X1; assumption


TcDebug (2) > 
Goal:
  
  i : Color.t
  ll : tree
  lx : X.t
  lr : tree
  x' : X.t
  r1 : tree
  r2 : tree
  r3 : tree
  e : elt
  H0 : InT x lr -> InT x (Node ll lx lr)
  H2 : InT y i
  X0 : elt a -> InT y l1
  X1 : E.eq y x -> False
  ============================
   False


Debug: Going to execute:
<Coq.Init.Tauto.is_empty> flags X1; elimtype X1


TcDebug (2) > 
Goal:
  
  i : Color.t
  ll : tree
  lx : X.t
  lr : tree
  x' : X.t
  r1 : tree
  r2 : tree
  r3 : tree
  e : elt
  H0 : InT x lr -> InT x (Node ll lx lr)
  H2 : InT y i
  X0 : elt a -> InT y l1
  ============================
   False


Debug: Going to execute:
<Coq.Init.Tauto.is_empty> flags X1


TcDebug (2) > 
Goal:
  
  i : Color.t
  ll : tree
  lx : X.t
  lr : tree
  x' : X.t
  r1 : tree
  r2 : tree
  r3 : tree
  e : elt
  H0 : InT x lr -> InT x (Node ll lx lr)
  H2 : InT y i
  X0 : elt a -> InT y l1
  X1 : E.eq y x -> False
  ============================
   False


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_empty@0>


TcDebug (3) > 
Goal:
  
  i : Color.t
  ll : tree
  lx : X.t
  lr : tree
  x' : X.t
  r1 : tree
  r2 : tree
  r3 : tree
  e : elt
  H0 : InT x lr -> InT

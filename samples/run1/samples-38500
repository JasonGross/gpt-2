======== SAMPLE 1 ========
:> Compat X with "tauto_intuit" in H


TcDebug (2) > 
Goal:
  
  _x : I.t
  l1 : tree
  x1 : X.t
  r1 : tree
  s2 : tree
  IHt0 : Ok l1 -> Ok (split x1 s2)#l -> Ok (union l1 (split x1 s2)#l)
  IHt1 : Ok r1 -> Ok (split x1 s2)#r -> Ok (union r1 (split x1 s2)#r)
  B2 : Ok s2
  H0 : X.eq x1 x2
  H1 : X.eq x2 x3
  H : Ok l1
  H2 : X.eq x1 x2
  H4 : Ok r1
  H5 : Ok r2
  H6 : lt_tree x1 l1
  H7 : gt_tree x1 r2
  y : elt
  H1 : X.eq y x2
  ============================
   (Ok (join l1 x1 r1))


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1


TcDebug (2) > 
Goal:
  
  _x : I.t
  l1 : tree
  x1 : X.t
  r1 : tree
  s2 : tree
  IHt0 : Ok l1 -> Ok (split x1 s2)#l -> Ok (union l1 (split x1 s2)#l)
  IHt1 : Ok r1 -> Ok (split x1 s2)#r -> Ok (union r1 (split x1 s2)#r)
  B2 : Ok s2
  H0 : X.eq x1 x2
  H1 : X.eq x2 x3
  H : Ok l1
  H2 : X.eq x1 x2
  H4 : Ok r1
  H5 : Ok r2
  H6 : lt_tree x1 l1
  H7 : gt_tree x1 r2
  y : elt
  H1 : X.eq y x2
  ============================
   (Ok (join l1 x1 r1))


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_disj@0>


TcDebug (3) > 
Goal:
  
  _x : I.t
  l1 : tree
  x1 : X.t
  r1 : tree
  s2 : tree
  IHt0 : Ok l1 -> Ok (split x1 s2)#l -> Ok (union l1 (split x1 s2)#l)
  IHt1 : Ok r1 -> Ok (split x1 s2)#r -> Ok (union r1 (split x1 s2)#r)
  B2 : Ok s2
  H0 : X.eq x1 x2
  H1 : X.eq x2 x3
  H : Ok l1
  H2 : X.eq x1 x2
  H4 : Ok r1
  H5 : Ok r2
  H6 : lt_tree x1 l1
  H7 : gt_tree x1 r2
  y : elt
  H1 : X.eq y x2
  ============================
   (Ok (join l1 x1 r1))


Debug: Going to execute:
<tauto_plugin::is_disj@0>


TcDebug (3) > 
Debug: Level 3: evaluation returns
<tactic closure>


Goal:
  
  _x : I.t
  l1 : tree
  x1 : X.t
  r1 : tree
  s2 : tree
  IHt0 : Ok l1 -> Ok (split x1 s2)#l -> Ok (union l1 (split x1 s2)#l)
  IHt1 : Ok r1 -> Ok (split x1 s2)#r -> Ok (union r1 (split x1 s2)#r)
  B2 : Ok s2
  H0 : X.eq x1 x2
  H1 :

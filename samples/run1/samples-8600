======== SAMPLE 1 ========
 n x
  H5 : In a s
  H6 : true = true
  H2 : False
  H7 : In x (fold_left
  H8 : fst (map2_opt l1 l2))
  H9 : true = true
  H7 : In x l2
  H10 : In x s2 -> False
  H3 : In x l2
  ============================
   (true = true && true)


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro


TcDebug (4) > 
Goal:
  
  _x : I.t
  l1 : tree
  x1 : X.t
  r1 : tree
  s2 : tree
  B2 : Ok s2
  H0 : (split x1 s2)#b = true
  H4 : Ok l1
  H5 : In x (fold_left
  H8 : fst (map2_opt l1 l2))
  H9 : true = true
  H7 : In x l2
  H10 : In x s2 -> False
  H3 : In x l2
  ============================
   (true = true && true)


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id


TcDebug (4) > 
Goal:
  
  _x : I.t
  l1 : tree
  x1 : X.t
  r1 : tree
  s2 : tree
  B2 : Ok s2
  H0 : (split x1 s2)#b = true
  H4 : Ok l1
  H5 : In x (fold_left
  H8 : fst (map2_opt l1 l2))
  H9 : true = true
  H7 : In x l2
  H10 : In x s2 -> False
  H3 : In x l2
  ============================
   (true = true && true)


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1


TcDebug (4) > 
Goal:
  
  _x : I.t
  l1 : tree
  x1 : X.t
  r1 : tree
  s2 : tree
  B2 : Ok s2
  H0 : (split x1 s2)#b = true
  H4 : Ok l1
  H5 : In x (fold_left
  H8 : fst (map2_opt l1 l2))
  H9 : true = true
  H7 : In x l2
  H10 : In x s2 -> False
  H3 : In x l2
  ============================
   (true = true && true)


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_conj@0>


TcDebug (5) > 
Goal:
  
  _x : I.t
  l1 : tree
  x1 : X.t
  r1 : tree
  s2 : tree
  B2 : Ok s2
  H0 : (split x1 s2)#b = true
  H4 : Ok l1
  H5 : In x (fold_left
  H8 : fst (map2_opt l1 l2))
  H9 : true = true
  H7 : In x l2
  H10 : In x s2 -> False
  H3 : In x l2
  ============================
   (true = true && true)


Debug: Going to execute:
<tauto_plugin::is_conj@0>


TcDebug (5) > 
Debug: Level 5: evaluation returns
<tactic closure>


Goal:
  
  _x : I.t
  l1 : tree
  x1 : X.t
  r1 : tree
  s2 : tree
  B2 : Ok s2
  H0 : (split x1 s2)#b = true
  H4 : Ok l1
  H5 : In x (fold_left
  H8 : fst (map2_opt

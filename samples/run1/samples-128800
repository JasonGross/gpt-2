======== SAMPLE 1 ========
 rsub : R -> R -> R
  ropp : R -> R
  req : R -> R -> Prop
  Rsth : Equivalence req
  Reqe : ring_eq_ext radd rmul ropp req
  ARth : almost_ring_theory 0 1 radd rmul rsub ropp req
  C : Type
  cO : C
  cI : C
  cadd : C -> C -> C
  cmul : C -> C -> C
  csub : C -> C -> C
  copp : C -> C
  ceqb : C -> C -> bool
  phi : C -> R
  CRmorph : ring_morph 0 1 radd rmul rsub ropp req cO cI cadd cmul csub copp
              ceqb phi
  Cpow : Type
  Cp_phi : N -> Cpow
  rpow : R -> Cpow -> R
  pow_th : power_theory 1 rmul req Cp_phi rpow
  P'1 : Pol
  p : positive
  P'2 : Pol
  IHP'1 : forall (P : Pol) (l : Env R), (P ** P'1) @ l == P @ l * P'1 @ l
  IHP'2 : forall (P : Pol) (l : Env R), (P ** P'2) @ l == P @ l * P'2 @ l
  P2 : Pol
  p0 : positive
  P3 : Pol
  l : Env R
  ============================
   ((P2 @ l * P'1 @ l * hd l ^ p0 + 0) * hd l ^ p +
    (P3 @ l * P'1 @ l * hd l ^ p + P'2 @ (tail l)) ==
    (P2 @ l * hd l ^ p + P3 @ l * hd l ^ p0 + 0) +
    (P'1 @ l * hd l ^ p + P'2 @ (tail l)))


Debug: Going to execute:
progress rewrite (ARopp_zero Rsth Reqe ARth)


TcDebug (0) > 
Goal:
  
  R : Type
  rO : R
  rI : R
  radd : R -> R -> R
  rmul : R -> R -> R
  rsub : R -> R -> R
  ropp : R -> R
  req : R -> R -> Prop
  Rsth : Equivalence req
  Reqe : ring_eq_ext radd rmul ropp req
  ARth : almost_ring_theory 0 1 radd rmul rsub ropp req
  C : Type
  cO : C
  cI : C
  cadd : C -> C -> C
  cmul : C -> C -> C
  csub : C -> C -> C
  copp : C -> C
  ceqb : C -> C -> bool
  phi : C -> R
  CRmorph : ring_morph 0 1 radd rmul rsub ropp req cO cI cadd cmul csub copp
              ceqb phi
  Cpow : Type
  Cp_phi : N -> Cpow
  rpow : R -> Cpow -> R
  pow_th : power_theory 1 rmul req Cp_phi rpow
  P'1 : Pol
  p : positive
  P'2 : Pol
  IHP'1 : forall (P : Pol) (l : Env R), (P ** P'1) @ l == P @ l * P'1 @ l
  IHP'2 : forall (P : Pol) (l : Env R), (P ** P'2) @ l == P @ l * P'2 @ l
  P2 : Pol
  p0 : positive
  P3 : Pol
  l : Env R
  ============================
   ((P2 @ l * P'1 @ l * hd l ^ p + 0) * hd l ^ p +
    (P3 @ l * P'1 @ l * hd l ^ p + P'2 @ (tail l)) ==
   

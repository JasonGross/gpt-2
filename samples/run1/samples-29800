======== SAMPLE 1 ========
  Sorted X.lt lhs


TcDebug (2) > 
Goal:
  
  _x : I.t
  l1 : tree
  x1 : X.t
  r1 : tree
  s2 : tree
  B2 : Ok s2
  H0 : (split x1 s2)#b = true
  H4 : Ok l1
  H5 : Ok r1
  H6 : lt_tree x1 l1
  H7 : gt_tree x1 r1
  IHb1 : Ok (diff l1 (split x1 s2)#l)
  IHi1 : forall y : elt,
         InT y (diff l1 (split x1 s2)#l) <->
         InT y l1 /\ ~ InT y (split x1 s2)#l
  IHb2 : Ok (diff r1 (split x1 s2)#r)
  IHi2 : forall y : elt,
         InT y (diff r1 (split x1 s2)#r) <->
         InT y r1 /\ ~ InT y (split x1 s2)#r
  y : elt
  H1 : InT y (Node _x l1 x1 r1)
  H2 : InT y s2
  H3 : X.lt x1 y
  H10 : False
  ============================
   (X.lt x1 y)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1


TcDebug (2) > 
Goal:
  
  _x : I.t
  l1 : tree
  x1 : X.t
  r1 : tree
  s2 : tree
  B2 : Ok s2
  H0 : (split x1 s2)#b = true
  H4 : Ok l1
  H5 : Ok r1
  H6 : lt_tree x1 l1
  H7 : gt_tree x1 r1
  IHb1 : Ok (diff l1 (split x1 s2)#l)
  IHi1 : forall y : elt,
         InT y (diff l1 (split x1 s2)#l) <->
         InT y l1 /\ ~ InT y (split x1 s2)#l
  IHb2 : Ok (diff r1 (split x1 s2)#r)
  IHi2 : forall y : elt,
         InT y (diff r1 (split x1 s2)#r) <->
         InT y r1 /\ ~ InT y (split x1 s2)#r
  y : elt
  H1 : InT y (Node _x l1 x1 r1)
  H2 : InT y s2
  H3 : X.lt x1 y
  H10 : False
  ============================
   (X.lt x1 y)


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_disj@0>


TcDebug (3) > 
Goal:
  
  _x : I.t
  l1 : tree
  x1 : X.t
  r1 : tree
  s2 : tree
  B2 : Ok s2
  H0 : (split x1 s2)#b = true
  H4 : Ok l1
  H5 : Ok r1
  H6 : lt_tree x1 l1
  H7 : gt_tree x1 r1
  IHb1 : Ok (diff l1 (split x1 s2)#l)
  IHi1 : forall y : elt,
         InT y (diff l1 (split x1 s2)#l) <->
         InT y l1 /\ ~ InT y (split x1 s2)#l
  IHb2 : Ok (diff r

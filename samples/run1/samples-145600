======== SAMPLE 1 ========
 X.t
  y : elt
  H0 : X.lt x x'
  H5 : Ok (Rd ll lx lr)
  H6 : Ok r
  H7 : lt_tree x' (Rd ll lx lr)
  H8 : gt_tree x' r
  H2 : X.eq y x -> False
  H1 : InT y lr
  ============================
   (InT y lr)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id; intro


TcDebug (3) > 
Goal:
  
  i : Color.t
  ll : tree
  lx : X.t
  lr : tree
  x' : X.t
  r : tree
  IHl : forall (x : X.t) (y : elt),
        Ok (Rd ll lx lr) ->
        InT y (del x (Rd ll lx lr)) <->
        InT y (Rd ll lx lr) /\ (X.eq y x -> False)
  IHr : forall (x : X.t) (y : elt),
        Ok r -> InT y (del x r) <-> InT y r /\ (X.eq y x -> False)
  x : X.t
  y : elt
  H0 : X.lt x x'
  H5 : Ok (Rd ll lx lr)
  H6 : Ok r
  H7 : lt_tree x' (Rd ll lx lr)
  H8 : gt_tree x' r
  H2 : X.eq y x -> False
  H1 : InT y lr
  ============================
   (InT y lr)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id


TcDebug (3) > 
Goal:
  
  i : Color.t
  ll : tree
  lx : X.t
  lr : tree
  x' : X.t
  r : tree
  IHl : forall (x : X.t) (y : elt),
        Ok (Rd ll lx lr) ->
        InT y (del x (Rd ll lx lr)) <->
        InT y (Rd ll lx lr) /\ (X.eq y x -> False)
  IHr : forall (x : X.t) (y : elt),
        Ok r -> InT y (del x r) <-> InT y r /\ (X.eq y x -> False)
  x : X.t
  y : elt
  H0 : X.lt x x'
  H5 : Ok (Rd ll lx lr)
  H6 : Ok r
  H7 : lt_tree x' (Rd ll lx lr)
  H8 : gt_tree x' r
  H2 : X.eq y x -> False
  H1 : InT y lr
  ============================
   (InT y lr)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1


TcDebug (3) > 
Goal:
  
  i : Color.t
  ll : tree
  lx : X.t
  lr : tree
  x' : X.t
  r : tree
  IHl : forall (x : X.t) (y : elt),
        Ok (Rd ll lx lr) ->
        InT y (del x (Rd ll lx lr)) <->
        InT y (Rd ll lx lr) /\ (X.eq y x -> False)
  IHr : forall (x : X.t) (y : elt),
  

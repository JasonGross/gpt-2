======== SAMPLE 1 ========
 -> R
  rle : R -> R -> Prop
  rlt : R -> R -> Prop
  sor : SOR 0 1 rplus rtimes rminus ropp req rle rlt
  C : Type
  cO : C
  cI : C
  cplus : C -> C -> C
  ctimes : C -> C -> C
  cminus : C -> C -> C
  copp : C -> C
  ceqb : C -> C -> bool
  cleb : C -> C -> bool
  phi : C -> R
  E : Type
  pow_phi : BinNums.N -> E
  rpow : R -> E -> R
  addon : SORaddon
  env : PolEnv
  p : PolC
  r : R
  F : Type
  F' : forall (r : R) (env : PolEnv),
        eval_opt_clause env (or_clause cl cl') <->
        ~ make_conj (eval_tt env) (eval_clause cl')
  H : ~ (eval_tt env a /\ make_conj (eval_tt env) cl') ->
       ~ make_conj (eval_tt env) (eval_clause cl')
  H1 : eval_tt env (or_clause cl cl) -> False
  H2 : make_conj (eval_tt env) (eval_clause cl) -> False
  H0 : make_conj (eval_tt env) (eval_tt env) cl -> False
  ============================
   (~ (eval_tt env a /\ make_conj (eval_tt env) cl) \/
    ~ make_conj (eval_tt env) (eval_tt env) cl')


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1


TcDebug (1) > 
Goal:
  
  R : Type
  rO : R
  rI : R
  rplus : R -> R -> R
  rtimes : R -> R -> R
  rminus : R -> R -> R
  ropp : R -> R
  req : R -> R -> Prop
  rle : R -> R -> Prop
  rlt : R -> R -> Prop
  sor : SOR 0 1 rplus rtimes rminus ropp req rle rlt
  C : Type
  cO : C
  cI : C
  cplus : C -> C -> C
  ctimes : C -> C -> C
  cminus : C -> C -> C
  copp : C -> C
  ceqb : C -> C -> bool
  cleb : C -> C -> bool
  phi : C -> R
  E : Type
  pow_phi : BinNums.N -> E
  rpow : R -> E -> R
  addon : SORaddon
  env : PolEnv
  p : PolC
  r : R
  F : Type
  F' : forall (r : R) (env : PolEnv),
        eval_opt_clause env (or_clause cl cl') <->
        ~ make_conj (eval_tt env) (eval_clause cl')
  H : ~ (eval_tt env a /\ make_conj (eval_tt env) cl') ->
       ~ make_conj (eval_tt env) (eval_clause cl')
  H1 : eval_tt env (or_clause cl) -> False
  H2 : make_conj (eval_tt env) (eval_clause cl) -> False
  H0 : make_conj (eval_tt env) (eval_tt env) cl -> False
  ============================
   (~ (eval_tt env a /\ make_conj (eval_tt env) cl) \/
    ~ make_conj (eval_tt env) (eval_tt env) cl')


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_conj@0>


TcDebug (2) > 
Goal:
  
  R : Type
  rO : R
  rI

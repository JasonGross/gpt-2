======== SAMPLE 1 ========

  a : E.t  H0 : In a s /\ E.lt x a \/ In a s'
  ============================
   ((In a s /\ NoDupA s' -> In a s' /\ NoDupA s' -> In a s /\ NoDupA s') /\
    (In a s /\ NoDupA s /\ In a s' -> In a s' \/ In a s /\ NoDupA s'))


Debug:
Going to execute:
<Coq.Init.Tauto.is_empty> flags X1; elimtype X1; assumption


TcDebug (3) > 
Goal:
    s : t  s' : t  s'' : t  a : E.t  H0 : In a s /\ E.lt x a \/ In a s'
  ============================
   ((In a s /\ NoDupA s' -> In a s' /\ NoDupA s' -> In a s /\ NoDupA s') /\
    (In a s /\ NoDupA s /\ In a s' -> In a s' \/ In a s /\ NoDupA s'))


Debug: Going to execute:
<Coq.Init.Tauto.is_empty> flags X1; elimtype X1


TcDebug (3) > 
Goal:
    s : t  s' : t  s'' : t  a : E.t  H0 : In a s /\ E.lt x a \/ In a s'
  ============================
   ((In a s /\ NoDupA s' -> In a s' /\ NoDupA s' -> In a s /\ NoDupA s') /\
    (In a s /\ NoDupA s /\ In a s' -> In a s' \/ In a s /\ NoDupA s'))


Debug: Going to execute:
<Coq.Init.Tauto.is_empty> flags X1


TcDebug (3) > 
Goal:
    s : t  s' : t  s'' : t  a : E.t  H0 : In a s /\ E.lt x a \/ In a s'
  ============================
   ((In a s /\ NoDupA s' -> In a s' /\ NoDupA s' -> In a s /\ NoDupA s') /\
    (In a s /\ NoDupA s /\ In a s' -> In a s' \/ In a s /\ NoDupA s'))


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_empty@0>


TcDebug (4) > 
Goal:
    s : t  s' : t  s'' : t  a : E.t  H0 : In a s /\ E.lt x a \/ In a s'
  ============================
   ((In a s /\ NoDupA s' -> In a s' /\ NoDupA s' -> In a s /\ NoDupA s') /\
    (In a s /\ NoDupA s /\ In a s' -> In a s' \/ In a s /\ NoDupA s'))


Debug: Going to execute:
<tauto_plugin::is_empty@0>


TcDebug (4) > 
Debug: Level 4: evaluation returns
<tactic closure>


Goal:
    s : t  s' : t  s'' : t  a : E.t  H0 : In a s /\ E.lt x a \/ In a s'
  ============================
   ((In a s /\ NoDupA s' -> In a s' /\ NoDupA s' -> In a s /\ NoDupA s') /\
    (In a s /\ NoDupA s /\ In a s' -> In a s' \/ In a s /\ NoDupA s'))


Debug:
Going to execute:
<Coq.Init.Tauto.is_empty> flags X1; elimtype X

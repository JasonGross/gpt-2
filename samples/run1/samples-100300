======== SAMPLE 1 ========
t
  n : nat
  m : nat
  n0 : nat
  m1 : nat
  m2 : nat
  H : true = true
  H1 : neg_rec
  H0 : forall a : elt, InT a (Node c1 l1 x1 r1) -> InT a (Node c2 l2 x2 r2)
  a : elt
  H2 : InT a r1 -> InT a (Node c2 l2 x2 r2)
  H4 : InT a r2
  H5 : X.lt a x1
  H0 : InT a l2
  H6 : X.lt a x2
  ============================
   (InT a (Node c2 l2 x2 r2))


Debug: Going to execute:
<Coq.Init.Tauto.is_empty> flags X1


TcDebug (2) > 
Goal:
  
  c1 : Info.t
  l1 : tree
  x1 : X.t
  r1 : tree
  c2 : Info.t
  l2 : tree
  x2 : X.t
  r2 : tree
  H5 : X.lt a x2
  H0 : InT a l2
  H6 : X.lt a x2
  ============================
   (InT a (Node c2 l2 x2 r2))


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_empty@0>


TcDebug (3) > 
Goal:
  
  c1 : Info.t
  l1 : tree
  x1 : X.t
  r1 : tree
  c2 : Info.t
  l2 : tree
  x2 : X.t
  r2 : tree
  H5 : X.lt a x2
  H0 : InT a l2
  H6 : X.lt a x2
  ============================
   (InT a (Node c2 l2 x2 r2))


Debug: Going to execute:
<tauto_plugin::is_empty@0>


TcDebug (3) > 
Debug: Level 3: evaluation returns
<tactic closure>


Goal:
  
  c1 : Info.t
  l1 : tree
  x1 : X.t
  r1 : tree
  c2 : Info.t
  l2 : tree
  x2 : X.t
  r2 : tree
  H5 : X.lt a x2
  H0 : InT a l2
  H6 : X.lt a x2
  ============================
   (InT a (Node c2 l2 x2 r2))


Debug:
Going to execute:
<Coq.Init.Tauto.is_empty> flags X1; elimtype X1; assumption


TcDebug (2) > 
Goal:
  
  c1 : Info.t
  l1 : tree
  x1 : X.t
  r1 : tree
  c2 : Info.t
  l2 : tree
  x2 : X.t
  r2 : tree
  H5 : X.lt a x2
  H0 : InT a l2
  H6 : X.lt a x2
  ============================
   (InT a (Node c2 l2 x2 r2))


Debug: Going to execute:
<Coq.Init.Tauto.is_empty> flags X1; elimtype X1


TcDebug (2) > 
Goal:
  
  c1 : Info.t
  l1 : tree
  x1 : X.t
  r1 : tree
  c2 : Info.t
  l2 : tree
  x2 : X.t
  r2 : tree
  H5 : X.lt a x2
  H0 : InT a l2
  H6 : X.lt a x2
  ============================
   (InT a (Node c2 l2 x2 r2))


Debug: Going to execute:
<Coq.Init.Tauto.is_empty> flags X1


TcDebug (2) > 
Goal:
  


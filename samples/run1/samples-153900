======== SAMPLE 1 ========
 | constructor 1; fail ] ]
| id:?X1 -> ?X2
  |- _ => <Coq.Init.Tauto.flatten_contravariant_disj> flags X1 X2 id
| |- ?X1 => <Coq.Init.Tauto.is_conj> flags X1; split
| |- _ <-> _ => split
| |- ~ _ => red
end


TcDebug (0) > 
Goal:
    s : t  s' : t  s'' : t  a : E.t  H1 : In a s  H0 : In a s' /\ In a s''
  ============================
   (In a s')


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro; clear id


TcDebug (1) > 
Goal:
    s : t  s' : t  s'' : t  a : E.t  H1 : In a s  H0 : In a s' /\ In a s''
  ============================
   (In a s')


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro


TcDebug (1) > 
Goal:
    s : t  s' : t  s'' : t  a : E.t  H1 : In a s  H0 : In a s' /\ In a s''
  ============================
   (In a s')


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id


TcDebug (1) > 
Goal:
    s : t  s' : t  s'' : t  a : E.t  H1 : In a s  H0 : In a s' /\ In a s''
  ============================
   (In a s')


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1


TcDebug (1) > 
Goal:
    s : t  s' : t  s'' : t  a : E.t  H1 : In a s  H0 : In a s' /\ In a s''
  ============================
   (In a s')


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_conj@0>


TcDebug (2) > 
Goal:
    s : t  s' : t  s'' : t  a : E.t  H1 : In a s  H0 : In a s' /\ In a s''
  ============================
   (In a s')


Debug: Going to execute:
<tauto_plugin::is_conj@0>


TcDebug (2) > 
Debug: Level 2: evaluation returns
<tactic closure>


Goal:
    s : t  s' : t  s'' : t  a : E.t  H1 : In a s  H0 : In a s' /\ In a s''
  ============================
   (In a s')


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro; clear id


TcDebug (1) > 
Goal:
    s : t  s' : t  s'' : t  a : E.t  H1 : In a s  H0 : In a s' /\ In a s''
  ============================
   (In a s')


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro


TcDebug (1) > 
Goal:
    s : t  s' : t  s'' : t  a : E.t  H1 : In a s  H0 : In a s' /\ In a s''
  ============================
   (In a s')


Debug: Going to execute:
<Coq.Init

======== SAMPLE 1 ========
_flags X1 => <tauto_plugin::is_conj@0>


TcDebug (2) > 
Goal:
  
  U : Type
  A : Type
  s1 : Ensemble A
  s2 : Ensemble A
  s3 : Ensemble A
  H : forall x y : A, In x s2 -> ~ In y s3 -> In x s3
  a : A
  H0 : In a (remove x s2)
  H1 : In a s3
  ============================
   (In a s4)


Debug: Going to execute:
<tauto_plugin::is_conj@0>


TcDebug (2) > 
Debug: Level 2: evaluation returns
<tactic closure>


Debug: Level 0: No matching clauses for match.

Debug: Level 0: No matching clauses for match.

Goal:
  
  U : Type
  A : Type
  s1 : Ensemble A
  s2 : Ensemble A
  s3 : Ensemble A
  H : forall x y : A, In x s2 -> ~ In y s3 -> In x s3
  a : A
  H0 : In a (remove x s2)
  H1 : In a s3
  ============================
  eqA : A -> False


Debug:
Going to execute:
match reverse goal with
| id:?X1
  |- _ => <Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro; clear id
| id:_ <-> _ |- _ => elim id; do 2 intro; clear id
| id:~ _ |- _ => red in id
| id:?X1 |- _ => <Coq.Init.Tauto.is_disj> flags X1; elim id; intro; clear id
| id0:?X1 -> ?X2, id1:?X1 |- _ => assert X2; [ exact (id0 id1) | clear id0 ]
| id:?X1 -> ?X2
  |- _ =>
      <Coq.Init.Tauto.is_unit_or_eq> flags X1; cut X2;
       [ intro; clear id | cut X1; [ exact id | constructor 1; fail ] ]
| id:?X1 -> ?X2
  |- _ => <Coq.Init.Tauto.flatten_contravariant_conj> flags X1 X2 id
| id:?X1 <-> ?X2 -> ?X3
  |- _ =>
      assert ((X1 -> X2) -> (X2 -> X1) -> X3) by
       (do 2 intro; apply id; split; assumption); clear id
| id:?X1 -> ?X2
  |- _ => <Coq.Init.Tauto.flatten_contravariant_disj> flags X1 X2 id
| |- ?X1 => <Coq.Init.Tauto.is_conj> flags X1; split
| |- _ <-> _ => split
| |- ~ _ => red
end


TcDebug (0) > 
Goal:
  
  U : Type
  A : Type
  s1 : Ensemble A
  s2 : Ensemble A
  s3 : Ensemble A
  H : forall x y : A, In x s2 -> ~ In y s3 -> In x s3
  a : A
  H0 : In a (remove x s2)
  H1 : In a s3
  ============================
  eqA : A -> False


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro; clear id


TcDebug (1) > 
Goal:
  
  U : Type
  A : Type
  s1 : Ensemble A
  s2 : Ensemble A
  s3 : Ensemble A
  H : forall x y : A, In x s2 -> ~ In y s3 -> In x s3
  a : A
  H0 : In a (remove x s2)
  H1 : In a s3
  =========================

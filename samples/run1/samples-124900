======== SAMPLE 1 ========
 H3 : ~ E.eq y x
  ============================
   (InA E.eq (elements s))


Debug: Going to execute:
unfold not in *


TcDebug (1) > 
Goal:
  
  s : tree
  x : elt
  H : forall y : elt, InT x (Leaf elt) -> InT y r -> X.lt x y
  y : elt
  H0 : InT y r
  ============================
   (InT y (Node i l x Leaf))


Debug: Going to execute:
t_solver


TcDebug (1) > 
Goal:
  
  s : tree
  x : elt
  H : forall y : elt, InT x (Leaf elt) -> InT y r -> X.lt x y
  y : elt
  H0 : InT y r
  ============================
   (InT y (Node i l x Leaf))


Debug: Going to execute:
<Coq.Init.Tauto.axioms> flags


TcDebug (1) > 
Goal:
  
  s : tree
  x : elt
  H : forall y : elt, InT x (Leaf elt) -> InT y r -> X.lt x y
  y : elt
  H0 : InT y r
  ============================
   (InT y (Node i l x Leaf))


Debug:
Going to execute:
fun flags =>
  match reverse goal with
  | |- ?X1 => <Coq.Init.Tauto.is_unit_or_eq> flags X1; constructor 1
  | _:?X1 |- _ => <Coq.Init.Tauto.is_empty> flags X1; elimtype X1; assumption
  | _:?X1 |- ?X1 => assumption
  end


TcDebug (2) > 
Goal:
  
  s : tree
  x : elt
  H : forall y : elt, InT x (Leaf elt) -> InT y r -> X.lt x y
  y : elt
  H0 : InT y r
  ============================
   (InT y (Node i l x Leaf))


Debug:
Going to execute:
match reverse goal with
| |- ?X1 => <Coq.Init.Tauto.is_unit_or_eq> flags X1; constructor 1
| _:?X1 |- _ => <Coq.Init.Tauto.is_empty> flags X1; elimtype X1; assumption
| _:?X1 |- ?X1 => assumption
end


TcDebug (2) > 
Goal:
  
  s : tree
  x : elt
  H : forall y : elt, InT x (Leaf elt) -> InT y r -> X.lt x y
  y : elt
  H0 : InT y r
  ============================
   (InT y (Node i l x Leaf))


Debug:
Going to execute:
<Coq.Init.Tauto.is_unit_or_eq> flags X1; constructor 1


TcDebug (3) > 
Goal:
  
  s : tree
  x : elt
  H : forall y : elt, InT x (Leaf elt) -> InT y r -> X.lt x y
  y : elt
  H0 : InT y r
  ============================
   (InT y (Node i l x Leaf))


Debug: Going to execute:
<Coq.Init.Tauto.is_unit_or_eq> flags X1


TcDebug (3) > 
Goal:
  
  s : tree
  x : elt
  H : forall y : elt, InT x (Leaf elt) -> InT y r -> X.lt x y
  y : elt
  H0 : InT y r
  ============================
   (InT y (Node i l x Leaf))


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_unit

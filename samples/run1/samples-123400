======== SAMPLE 1 ========
 nil)


Debug:
Going to execute:
<Coq.Init.Tauto.is_empty> flags X1; elimtype X1; assumption


TcDebug (2) > 
Goal:
  
  elt : Type
  l : list Ensemble
  x : key
  H2 : In x l
  tg : (X.eq x x2 \/ In x tg)
  H4 : True
  H1 : gt_tree x (Node gt_tree rx rr)
  H0 : InT x tg
  H6 : X.eq x rx
  ============================
   (InT x l \/ X.eq x rx \/ InT x rr)


Debug: Going to execute:
<Coq.Init.Tauto.is_empty> flags X1; elimtype X1


TcDebug (2) > 
Goal:
  
  elt : Type
  l : list Ensemble
  x : key
  H2 : In x l
  tg : (X.eq x x2 \/ In x tg)
  H4 : True
  H1 : gt_tree x (Node gt_tree rx rr)
  H0 : InT x tg
  H6 : X.eq x rx
  ============================
   (InT x l \/ X.eq x rx \/ InT x rr)


Debug: Going to execute:
<Coq.Init.Tauto.is_empty> flags X1


TcDebug (2) > 
Goal:
  
  elt : Type
  l : list Ensemble
  x : key
  H2 : In x l
  tg : (X.eq x x2 \/ In x tg)
  H4 : True
  H1 : gt_tree x (Node gt_tree rx rr)
  H0 : InT x tg
  H6 : X.eq x rx
  ============================
   (InT x l \/ X.eq x rx \/ InT x rr)


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_empty@0>


TcDebug (3) > 
Goal:
  
  elt : Type
  l : list Ensemble
  x : key
  H2 : In x l
  tg : (X.eq x x2 \/ In x tg)
  H4 : True
  H1 : gt_tree x (Node gt_tree rx rr)
  H0 : InT x tg
  H6 : X.eq x rx
  ============================
   (InT x l \/ X.eq x rx \/ InT x rr)


Debug: Going to execute:
<tauto_plugin::is_empty@0>


TcDebug (3) > 
Debug: Level 3: evaluation returns
<tactic closure>


Goal:
  
  elt : Type
  l : list Ensemble
  x : key
  H2 : In x l
  tg : (X.eq x x2 \/ In x tg)
  H4 : True
  H1 : gt_tree x (Node gt_tree rx rr)
  H0 : InT x tg
  H6 : X.eq x rx
  ============================
   (InT x l \/ X.eq x rx \/ InT x rr)


Debug:
Going to execute:
<Coq.Init.Tauto.is_empty> flags X1; elimtype X1; assumption


TcDebug (2) > 
Goal:
  
  elt : Type
  l : list Ensemble
  x : key
  H2 : In x l
  tg : (X.eq x x2 \/ In x tg)
  H4 : True
  H1 : gt_tree x (Node gt_tree rx rr)
  H0 : InT x tg
  H6 : X.eq x rx
  ============================
   (InT x l \/ X.eq x rx \/ In

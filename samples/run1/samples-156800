======== SAMPLE 1 ========
         Ok l' -> In x0 (diff (x :: l) l') <-> In x0 (x :: l) /\ ~ In x0 l'
  H : X.eq x x'
  x0 : elt
  H0 : Sorted X.lt l
  H1 : Inf x' l'
  H2 : Sorted X.lt l
  H3 : Inf x l
  ============================
   (X.eq x0 x \/ In x0 l /\ ~ In x0 l')


Goal:
  
  s : t
  x : elt
  l : list elt
  Hrec : forall x' : elt,
         Ok l -> Ok (diff l l') -> In x l /\ ~ In x l'
  s' : t
  x' : elt
  l' : list elt
  Hrec' : forall x0 : elt,
          Ok (x :: l) ->
          Ok l' -> In x0 (diff (x :: l) l') <-> In x0 (x :: l) /\ ~ In x0 l'
  H : X.eq x x'
  x0 : elt
  H0 : Sorted X.lt l
  H1 : Inf x' l'
  H2 : Sorted X.lt l
  H3 : Inf x l
  ============================
   (X.eq x0 x \/ In x0 l /\ ~ In x0 l')


Goal:
  
  s : t
  x : elt
  l : list elt
  Hrec : forall x' : elt,
         Ok l -> Ok (diff l l') -> In x l /\ ~ In x l'
  s' : t
  x' : elt
  l' : list elt
  Hrec' : forall x0 : elt,
          Ok (x :: l) ->
          Ok l' -> In x0 (diff (x :: l) l') <-> In x0 (x :: l) /\ ~ In x0 l'
  H : X.eq x x'
  x0 : elt
  H0 : Sorted X.lt l
  H1 : Inf x' l'
  H2 : Sorted X.lt l
  H3 : Inf x l
  ============================
   (X.eq x0 x \/ In x0 l /\ ~ In x0 l')


Debug:
Going to execute:
repeat
 match goal with
 | |- ?X1 -> ?X2 => intro
 | |- ~ _ => unfold not at 1; intro
 end


TcDebug (1) > 
Goal:
  
  s : t
  x : elt
  l : list elt
  Hrec : forall x' : elt,
         Ok l -> Ok (diff l l') -> In x l /\ ~ In x l'
  s' : t
  x' : elt
  l' : list elt
  Hrec' : forall x0 : elt,
          Ok (x :: l) ->
          Ok l' -> In x0 (diff (x :: l) l') <-> In x0 (x :: l) /\ ~ In x0 l'
  H : X.eq x x'
  x0 : elt
  H0 : Sorted X.lt l
  H1 : Inf x' l'
  H2 : Sorted X.lt l
  H3 : Inf x l
  ============================
   (X.eq x0 x \/ In x0 l /\ ~ In x0 l')


Debug:
Going to execute:
match goal with
| |- ?X1 -> ?X2 => intro
| |- ~ _ => unfold not at 1; intro
end


TcDebug (0) > 
Debug: Level 0: No matching clauses for match.

Goal:
  
  s : t
  x : elt
  l : list elt
  H

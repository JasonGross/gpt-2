======== SAMPLE 1 ========

   (X.eq y b \/ InT y l /\ (X.eq y x -> False) \/ InT y r)


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1


TcDebug (3) > 
Goal:
  
  l : tree
  x : X.t
  r : tree
  y : elt
  a : tree
  x0 : X.t
  b : tree
  H0 : X.eq y x
  ============================
   (X.eq y b \/ InT y l /\ (X.eq y x -> False) \/ InT y r)


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_conj@0>


TcDebug (4) > 
Goal:
  
  l : tree
  x : X.t
  r : tree
  y : elt
  a : tree
  x0 : X.t
  b : tree
  H0 : X.eq y x
  ============================
   (X.eq y b \/ InT y l /\ (X.eq y x -> False) \/ InT y r)


Debug: Going to execute:
<tauto_plugin::is_conj@0>


TcDebug (4) > 
Debug: Level 4: evaluation returns
<tactic closure>


Goal:
  
  l : tree
  x : X.t
  r : tree
  y : elt
  a : tree
  x0 : X.t
  b : tree
  H0 : X.eq y x
  ============================
   (X.eq y b \/ InT y l /\ (X.eq y x -> False) \/ InT y r)


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro; clear id


TcDebug (3) > 
Goal:
  
  l : tree
  x : X.t
  r : tree
  y : elt
  a : tree
  x0 : X.t
  b : tree
  H0 : X.eq y x
  ============================
   (X.eq y b \/ InT y l /\ (X.eq y x -> False) \/ InT y r)


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro


TcDebug (3) > 
Goal:
  
  l : tree
  x : X.t
  r : tree
  y : elt
  a : tree
  x0 : X.t
  b : tree
  H0 : X.eq y x
  ============================
   (X.eq y b \/ InT y l /\ (X.eq y x -> False) \/ InT y r)


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id


TcDebug (3) > 
Goal:
  
  l : tree
  x : X.t
  r : tree
  y : elt
  a : tree
  x0 : X.t
  b : tree
  H0 : X.eq y x
  ============================
   (X.eq y b \/ InT y l /\ (X.eq y x -> False) \/ InT y r)


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1


TcDebug (3) > 
Goal:
  
  l : tree
  x : X.t
  r : tree
  y : elt
  a : tree
  x0 : X.t
  b : tree
  H0 : X.eq y x
  ============================
   (X.eq y b \/ InT y l /\ (X.eq y x -> False) \/ InT y r)


Debug: Going to execute:
fun tauto_flags X1 => <tauto_

======== SAMPLE 1 ========
 x x'
  ============================
   (true = true <-> true = true /\ false = true)


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1


TcDebug (1) > 
Goal:
  
  A : Type
  a : A
  t : list A
  a0 : list A
  a : A
  l : list A
  H : eq a0 a
  LE : l == t
  x' : A
  H2 : In x' l -> False
  H3 : In x' r
  H4 : In x' r
  H5 : In x' r
  H7 : In x' r -> In x' ll \/ In x' t
  H6 : In x' r -> True
  H8 : In x' ll
  H5 : In x' t
  ============================
   (true = true <-> true = true /\ false = true)


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_conj@0>


TcDebug (2) > 
Goal:
  
  A : Type
  a : A
  t : list A
  a0 : list A
  a : A
  l : list A
  H : eq a0 a
  LE : l == t
  x' : A
  H2 : In x' l -> False
  H3 : In x' r
  H4 : In x' r
  H5 : In x' r
  H7 : In x' r -> In x' ll \/ In x' t
  H6 : In x' r -> True
  H8 : In x' ll
  H5 : In x' t
  ============================
   (true = true <-> true = true /\ false = true)


Debug: Going to execute:
<tauto_plugin::is_conj@0>


TcDebug (2) > 
Debug: Level 2: evaluation returns
<tactic closure>


Goal:
  
  A : Type
  a : A
  t : list A
  a0 : list A
  a : A
  l : list A
  H : eq a0 a
  LE : l == t
  x' : A
  H2 : In x' l -> False
  H3 : In x' r
  H4 : In x' r
  H5 : In x' r
  H7 : In x' r -> In x' ll \/ In x' t
  H6 : In x' r -> True
  H8 : In x' ll
  H5 : In x' t
  ============================
   (true = true <-> true = true /\ false = true)


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro; clear id


TcDebug (1) > 
Goal:
  
  A : Type
  a : A
  t : list A
  a0 : list A
  a : A
  l : list A
  H : eq a0 a
  LE : l == t
  x' : A
  H2 : In x' l -> False
  H3 : In x' r
  H4 : In x' r
  H5 : In x' r
  H7 : In x' r -> In x' ll \/ In x' t
  H6 : In x' r -> True
  H8 : In x' ll
  H5 : In x' t
  ============================
   (true = true <-> true = true /\ false = true)


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro


TcDebug (1) > 
Goal:
  
  A : Type
  a : A
  t : list A
  a0 : list A
  a : A
  l : list A
  H : eq a0 a
  LE : l == t
  x' : A
  H2 : In x' l -> False
  H3 : In x' r
  H4 : In x'

======== SAMPLE 1 ========
A (PaddC PaddI Padd (PaddC Padd0, P0)
             (PaddI Padd0, P10 * PaddC PaddO (PaddI Padd0, P0)))
          (PaddI Padd0, P10 * PaddC PaddO (PaddI Padd0, P0 @ l))))


Debug: Going to execute:
rewrite <- (PaddI0_r 1 PaddC 0)%hyp


TcDebug (0) > 
Debug: Evaluated term: PaddI0_r

Debug: Evaluated term: (PaddI0_r ?R ?PaddC_r)%list

Goal:
  
  R : Type
  rO : R
  rI : R
  radd : R -> R -> R
  rmul : R -> R -> R
  rsub : R -> R -> R
  ropp : R -> R
  req : R -> R -> Prop
  Rsth : Equivalence req
  Reqe : ring_eq_ext radd rmul ropp req
  ARth : almost_ring_theory 0 1 radd rmul rsub ropp req
  C : Type
  cO : C
  cI : C
  cadd : C -> C -> C
  cmul : C -> C -> C
  csub : C -> C -> C
  copp : C -> C
  ceqb : C -> C -> bool
  phi : C -> R
  CRmorph : ring_morph 0 1 radd rmul rsub ropp req cO cI cadd cmul csub copp
              ceqb phi
  Cpow : Type
  Cp_phi : N -> Cpow
  rpow : R -> Cpow -> R
  pow_th : power_theory 1 rmul req Cp_phi rpow
  cdiv : C -> C -> C * C
  div_th : div_theory req cadd cmul phi cdiv
  c0 : C
  P : (Pos.to_nat (2 * p * rpow P + P) @ l == Pos.to_nat (2 * p * rpow PER_C * P @ l)
  ============================
   (Pos.to_nat (2 * p * (2 * p * lb * rpow P + P0) * rpow (P2 * p * rpow P + P0) @ l *
    (Pos.to_nat (2 * p * i2c_tt lh) * rpow (P2 * p * rpow P + P0) @ l))


Debug: Going to execute:
rewrite <- (PaddI2_r 1 PaddC 0)%hyp


TcDebug (0) > 
Debug: Evaluated term: PaddI2_r

Debug: Evaluated term: (PaddI2_r ?R ?PaddC_r)%list

Goal:
  
  R : Type
  rO : R
  rI : R
  radd : R -> R -> R
  rmul : R -> R -> R
  rsub : R -> R -> R
  ropp : R -> R
  req : R -> R -> Prop
  Rsth : Equivalence req
  Reqe : ring_eq_ext radd rmul ropp req
  ARth : almost_ring_theory 0 1 radd rmul rsub ropp req
  C : Type
  cO : C
  cI : C
  cadd : C -> C -> C
  cmul : C -> C -> C
  csub : C -> C -> C
  copp : C -> C
  ceqb : C -> C -> bool
  phi : C -> R
  CRmorph : ring_morph 0 1 radd rmul rsub ropp req cO cI cadd cmul csub copp
              ceqb phi
  Cpow : Type
  Cp_phi : N -> Cpow
  rpow : R -> Cpow -> R
  pow_th : power_theory

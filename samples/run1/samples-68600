======== SAMPLE 1 ========
    False <-> In x0 l0 \/ In x0 l'
  H : X.eq x x'
  x0 : elt
  H0 : Sorted X.lt l'
  H1 : Inf x' l'
  H2 : Sorted X.lt l
  H3 : Inf x l
  H4 : In x0 l
  ============================
   False


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1


TcDebug (1) > 
Goal:
  
  s : t
  x : elt
  l : list elt
  Hrec : forall (s' : t) (x : elt),
         In x (union s s') <-> In x l \/ In x s'
  s' : t
  x' : elt
  l' : list elt
  Hrec' : forall x0 : elt,
          In x0 (union s s') <-> In x0 (union s s')
  H1 : In x0 l'
  H2 : In x0 (union s s')
  H3 : In x0 l'
  H4 : X.eq x0 x
  H5 : X.eq x0 x'
  ============================
   False


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_disj@0>


TcDebug (2) > 
Goal:
  
  s : t
  x : elt
  l : list elt
  Hrec : forall (s' : t) (x : elt),
         In x (union s s') <-> In x l \/ In x s'
  s' : t
  x' : elt
  l' : list elt
  Hrec' : forall x0 : elt,
          In x0 (union s s') <-> In x0 (union s s')
  H1 : In x0 l'
  H2 : In x0 (union s s')
  H3 : In x0 l'
  H4 : X.eq x0 x
  H5 : X.eq x0 x'
  ============================
   False


Debug: Going to execute:
<tauto_plugin::is_disj@0>


TcDebug (2) > 
Debug: Level 2: evaluation returns
<tactic closure>


Goal:
  
  s : t
  x : elt
  l : list elt
  Hrec : forall (s' : t) (x : elt),
         In x (union s s') <-> In x l \/ In x s'
  s' : t
  x' : elt
  l' : list elt
  Hrec' : forall x0 : elt,
          In x0 (union s s') <-> In x0 (union s s')
  H1 : In x0 l'
  H2 : In x0 (union s s')
  H3 : In x0 l'
  H4 : X.eq x0 x
  H5 : X.eq x0 x'
  ============================
   False


Debug:
Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id; intro; clear id


TcDebug (1) > 
Goal:
  
  s : t
  x : elt
  l : list elt
  Hrec : forall (s' : t) (x : elt),
         In x (union s s') <-> In x l \/ In x s'
  s' : t
  x' : elt
  l' : list elt
  Hrec' : forall x0 : elt,
          In x0 (union s s') <-> In x0 (union s s')
  H1 : In x0 l'
  H2 : In x0 (union s s')
  H

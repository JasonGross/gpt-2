======== SAMPLE 1 ========
) -> false = true
  H4 : false = true -> In x (inter s s')
  H : In x s -> false = true
  H5 : false = true -> In x s
  H1 : In x (inter s s') -> In x s /\ In x s'
  H7 : In x s /\ In x s' -> In x (inter s s')
  H2 : In x s'
  H6 : true = true
  ============================
   (false = false && true)


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_conj@0>


TcDebug (3) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  H3 : In x (inter s s') -> false = true
  H4 : false = true -> In x (inter s s')
  H : In x s -> false = true
  H5 : false = true -> In x s
  H1 : In x (inter s s') -> In x s /\ In x s'
  H7 : In x s /\ In x s' -> In x (inter s s')
  H2 : In x s'
  H6 : true = true
  ============================
   (false = false && true)


Debug: Going to execute:
<tauto_plugin::is_conj@0>


TcDebug (3) > 
Debug: Level 3: evaluation returns
<tactic closure>


Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  H3 : In x (inter s s') -> false = true
  H4 : false = true -> In x (inter s s')
  H : In x s -> false = true
  H5 : false = true -> In x s
  H1 : In x (inter s s') -> In x s /\ In x s'
  H7 : In x s /\ In x s' -> In x (inter s s')
  H2 : In x s'
  H6 : true = true
  ============================
   (false = false && true)


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro; clear id


TcDebug (2) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  H3 : In x (inter s s') -> false = true
  H4 : false = true -> In x (inter s s')
  H : In x s -> false = true
  H5 : false = true -> In x s
  H1 : In x (inter s s') -> In x s /\ In x s'
  H7 : In x s /\ In x s' -> In x (inter s s')
  H2 : In x s'
  H6 : true = true
  ============================
   (false = false && true)


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro


TcDebug (2) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  H3 : In x (inter s s') -> false = true
  H4 : false = true -> In x (inter s s')
  H : In x s -> false = true
  H5 : false = true -> In x s
  H1 : In x (inter s s') -> In x s /\ In x s'
  H7 : In x s /\ In x s' -> In x (inter s s')
  H2 : In x s'
  H6 : true = true
  ============================
   (false = false && true)


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim

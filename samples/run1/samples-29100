======== SAMPLE 1 ========
_tree y r
  H1 : X.eq y rx
  ============================
   (InT y l)


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_disj@0>


TcDebug (4) > 
Goal:
  
  i : I.t
  l : tree
  x' : X.t
  r : tree
  x : X.t
  y : elt
  l' : tree
  x' : X.t
  r : tree
  x'0 : X.t
  r' : tree
  H : X.eq x x'
  H0 : InT y l
  H3 : InT y r
  H2 : InT y l'
  H4 : X.lt x y
  H5 : X.eq y x'
  ============================
   (InT y l)


Debug: Going to execute:
<tauto_plugin::is_disj@0>


TcDebug (4) > 
Debug: Level 4: evaluation returns
<tactic closure>


Goal:
  
  i : I.t
  l : tree
  x' : X.t
  r : tree
  x : X.t
  y : elt
  l' : tree
  x' : X.t
  r : tree
  x'0 : X.t
  r' : tree
  H : X.eq x x'
  H0 : InT y l
  H3 : InT y r
  H2 : InT y l'
  H4 : X.lt x y
  H5 : X.eq y x'
  ============================
   (InT y l)


Debug:
Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id; intro; clear id


TcDebug (3) > 
Goal:
  
  i : I.t
  l : tree
  x' : X.t
  r : tree
  x : X.t
  y : elt
  l' : tree
  x'0 : X.t
  r' : tree
  H : X.eq x x'
  H0 : InT y l
  H3 : InT y r
  H2 : InT y l'
  H4 : X.lt x y
  H5 : X.eq y x'
  ============================
   (InT y l)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id; intro


TcDebug (3) > 
Goal:
  
  i : I.t
  l : tree
  x' : X.t
  r : tree
  x : X.t
  y : elt
  l' : tree
  x'0 : X.t
  r' : tree
  H : X.eq x x'
  H0 : InT y l
  H3 : InT y r
  H2 : InT y l'
  H4 : X.lt x y
  H5 : X.eq y x'
  ============================
   (InT y l)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id


TcDebug (3) > 
Goal:
  
  i : I.t
  l : tree
  x' : X.t
  r : tree
  x : X.t
  y : elt
  l' : tree
  x'0 : X.t
  r' : tree
  H : X.eq x x'
  H0 : InT y l
  H3 : InT y r
  H2 : InT y l'
  H4 : X.lt x y
  H5 : X.eq y x'
  ============================
   (InT y l)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1


TcDebug (3) > 
Goal:
  
  i : I.t
  l : tree

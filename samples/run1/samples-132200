======== SAMPLE 1 ========
 x0 r
  H4 : - a <= p
  H5 : - a < p
  H6 : a < - a
  H7 : a <= Z.pred 0
  H8 : a < a
  ============================
   (a < -1)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id


TcDebug (3) > 
Goal:
  
  p : Z
  H : 1 < p
  H0 : forall n : Z, 1 <= n < p -> rel_prime n p
  a : Z
  H1 : (a | p)
  H2 : p >= 0
  H3 : a <= 0
  H4 : - a <= p
  H5 : - a < p
  H6 : a < - a
  H7 : a <= Z.pred 0
  H8 : a < a
  ============================
   (a < -1)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1


TcDebug (3) > 
Goal:
  
  p : Z
  H : 1 < p
  H0 : forall n : Z, 1 <= n < p -> rel_prime n p
  a : Z
  H1 : (a | p)
  H2 : p >= 0
  H3 : a <= 0
  H4 : - a <= p
  H5 : - a < p
  H6 : a < - a
  H7 : a <= Z.pred 0
  H8 : a < a
  ============================
   (a < -1)


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_disj@0>


TcDebug (4) > 
Goal:
  
  p : Z
  H : 1 < p
  H0 : forall n : Z, 1 <= n < p -> rel_prime n p
  a : Z
  H1 : (a | p)
  H2 : p >= 0
  H3 : a <= 0
  H4 : - a <= p
  H5 : - a < p
  H6 : a < - a
  H7 : a <= Z.pred 0
  H8 : a < a
  ============================
   (a < -1)


Debug: Going to execute:
<tauto_plugin::is_disj@0>


TcDebug (4) > 
Debug: Level 4: evaluation returns
<tactic closure>


Goal:
  
  p : Z
  H : 1 < p
  H0 : forall n : Z, 1 <= n < p -> rel_prime n p
  a : Z
  H1 : (a | p)
  H2 : p >= 0
  H3 : a <= 0
  H4 : - a <= p
  H5 : - a < p
  H6 : a < - a
  H7 : a <= Z.pred 0
  H8 : a < a
  ============================
   (a < -1)


Debug:
Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id; intro; clear id


TcDebug (3) > 
Goal:
  
  p : Z
  H : 1 < p
  H0 : forall n : Z, 1 <= n < p -> rel_prime n p
  a : Z
  H1 : (a | p)
  H2 : p >= 0
  H3 : a <= 0
  H4 : - a <= p
  H5 : - a < p
  H6 : a < - a
  H7 : a <= Z.pred 0
  H8 : a < a
  ============================
   (a < -1)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id; intro


TcDebug (3) > 
Goal:
  
  p : Z
  H : 1 < p
  H0 : forall n : Z, 1 <= n < p -> rel_prime n p
  a : Z

======== SAMPLE 1 ========
  (forall x y z : A -> B,
    MapsTo x y z -> Prop (forall x0 y : A, InA x nil -> InA y z)


Debug:
Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id; intro; clear id


TcDebug (2) > 
Goal:
  
  A : Type
  a : A
  x : list A
  y : A
  H : a = x
  H0 : a = x
  ============================
   (forall x y z : A -> B,
    MapsTo x y z -> Prop (forall x0 y : A, InA x nil -> InA y z)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id; intro


TcDebug (2) > 
Goal:
  
  A : Type
  a : A
  x : list A
  y : A
  H : a = x
  H0 : a = x
  ============================
   (forall x y z : A -> B,
    MapsTo x y z -> Prop (forall x0 y : A, InA x nil -> InA y z)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id


TcDebug (2) > 
Goal:
  
  A : Type
  a : A
  x : list A
  y : A
  H : a = x
  H0 : a = x
  ============================
   (forall x y z : A -> B,
    MapsTo x y z -> Prop (forall x0 y : A, InA x nil -> InA y z)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1


TcDebug (2) > 
Goal:
  
  A : Type
  a : A
  x : list A
  y : A
  H : a = x
  H0 : a = x
  ============================
   (forall x y z : A -> B,
    MapsTo x y z -> Prop (forall x0 y : A, InA x nil -> InA y z)


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_disj@0>


TcDebug (3) > 
Goal:
  
  A : Type
  a : A
  x : list A
  y : A
  H : a = x
  H0 : a = x
  ============================
   (forall x y z : A -> B,
    MapsTo x y z -> Prop (forall x0 y : A, InA x nil -> InA y z)


Debug: Going to execute:
<tauto_plugin::is_disj@0>


TcDebug (3) > 
Debug: Level 3: evaluation returns
<tactic closure>


Goal:
  
  A : Type
  a : A
  x : list A
  y : A
  H : a = x
  H0 : a = x
  ============================
   (forall x y z : A -> B,
    MapsTo x y z -> Prop (forall x0 y : A, InA x nil -> InA y z)


Debug:
Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id; intro; clear id


TcDebug (2) > 
Goal:
  
  A : Type
  a : A
  x : list A
  y : A
  H : a = x
  H0 : a = x
  ============================
   (forall x y z : A -> B,
    MapsTo x y z -> Prop (forall x0 y : A, InA x nil -> InA y z)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id; intro


Tc

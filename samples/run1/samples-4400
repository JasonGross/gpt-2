======== SAMPLE 1 ========
 Prop f with
             id
             with E.eq (f0 (x1 :: l1)) ->
              find x f (x1 :: l1) =
              match find x with
              | Some d => f0 x (Some d) None
             | None => None
              end
TcDebug (1) > 
Goal:
    elt : Type  x : key  e : key  i : t elt  r : t elt  m : (QChoice elt  E.eq x m)%type
  ============================
   ( (QChoice elt  e.lt x m) ==
    ((QChoice elt  e.eq x l2  x1         i)%type)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id; intro


TcDebug (1) > 
Goal:
    elt : Type  x : key  e : key  i : t elt  r : t elt  m : (QChoice elt  E.eq x m)%type
  ============================
   ( (QChoice elt  e.lt x m) ==
    ((QChoice elt  e.eq x l2  x1          i)%type)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id


TcDebug (1) > 
Goal:
    elt : Type  x : key  e : key  i : t elt  r : t elt  m : (QChoice elt  E.eq x m)%type
  ============================
   ( (QChoice elt  e.lt x m) ==
    ((QChoice elt  e.eq x l2  x1          i)%type)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1


TcDebug (1) > 
Goal:
    elt : Type  x : key  e : key  i : t elt  r : t elt  m : (QChoice elt  E.eq x m)%type
  ============================
   ( (QChoice elt  e.lt x m) ==
    ((QChoice elt  e.eq x l2  x1          i)%type)


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_disj@0>


TcDebug (2) > 
Goal:
    elt : Type  x : key  e : key  i : t elt  r : t elt  m : (QChoice elt  E.eq x m)%type
  ============================
   ( (QChoice elt  e.lt x m) ==
    ((QChoice elt  e.eq x l2  x1          i)%type)


Debug: Going to execute:
<tauto_plugin::is_disj@0>


TcDebug (2) > 
Debug: Level 2: evaluation returns
<tactic closure>


Goal:
    elt : Type  x : key  e : key  i : t elt  r : t elt  m : (QChoice elt  E.eq x m)%type
  ============================
   (QChoice elt  e.lt x m) <-> (eq x x x) ==
    (eq x l1 x x1) /\
    (eq x x l2 x x1)


Debug:
Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id; intro; clear

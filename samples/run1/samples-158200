======== SAMPLE 1 ========
disj> flags X1; elim id; intro; clear id


TcDebug (1) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  f : elt -> bool
  H : Proper (E.eq ==> Logic.eq) f
  H2 : In x s
  H5 : f x = true
  H0 : In x s
  H6 : true = true
  H3 : In x (filter f s)
  H1 : In x (filter f s)
  ============================
   (In x s)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id; intro


TcDebug (1) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  f : elt -> bool
  H : Proper (E.eq ==> Logic.eq) f
  H2 : In x s
  H5 : f x = true
  H0 : In x s
  H6 : true = true
  H3 : In x (filter f s)
  H1 : In x (filter f s)
  ============================
   (In x s)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id


TcDebug (1) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  f : elt -> bool
  H : Proper (E.eq ==> Logic.eq) f
  H2 : In x s
  H5 : f x = true
  H0 : In x s
  H6 : true = true
  H3 : In x (filter f s)
  H1 : In x (filter f s)
  ============================
   (In x s)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1


TcDebug (1) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  f : elt -> bool
  H : Proper (E.eq ==> Logic.eq) f
  H2 : In x s
  H5 : f x = true
  H0 : In x s
  H6 : true = true
  H3 : In x (filter f s)
  H1 : In x (filter f s)
  ============================
   (In x s)


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_disj@0>


TcDebug (2) > 
Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  f : elt -> bool
  H : Proper (E.eq ==> Logic.eq) f
  H2 : In x s
  H5 : f x = true
  H0 : In x s
  H6 : true = true
  H3 : In x (filter f s)
  H1 : In x (filter f s)
  ============================
   (In x s)


Debug: Going to execute:
<tauto_plugin::is_disj@0>


TcDebug (2) > 
Debug: Level 2: evaluation returns
<tactic closure>


Goal:
  
  s : t
  s' : t
  s'' : t
  x : elt
  y : elt
  z : elt
  f : elt -> bool
  H : Proper (E.eq ==> Logic.eq) f
  H2 : In x s
  H5 : f x = true
  H0 : In x s
  H6 : true = true
  H3 : In x (filter f s)

======== SAMPLE 1 ========
 elt
  a : tree
  x : X.t
  b : tree
  y : elt
  a' : X.t
  b' : X.t
  c : tree
  H5 : Ok l
  H6 : Ok r
  H7 : lt_tree x l -> Ok (split x r)#l /\ Ok (split x r)#r
  H4 : Ok l
  H9 : Ok r
  H10 : lt_tree x l
  H11 : gt_tree x r
  H : X.lt y x
  ============================
   (X.lt y x)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1; elim id


TcDebug (1) > 
Goal:
  
  c : Color.t
  l : tree
  y : X.t
  r : tree
  Hl : forall s : tree,
       Ok l -> Ok s' -> subset l s = true <-> Subset l s'
  Hr : forall (x : elt) (s : t),
       Ok r -> In x s /\ ~ In x r -> f x = true
  Hr' : forall (x : elt) (s : t),
       Ok r -> In x s /\ ~ In x r -> f x = true
  Hr'' : forall x y : elt,
        Ok r -> In x s' <-> In x (filter f l)
  H0 : In x (filter f l)
  H2 : In x (filter f l)
  H4 : true = true
  ============================
   (X.lt y x)


Debug: Going to execute:
<Coq.Init.Tauto.is_disj> flags X1


TcDebug (1) > 
Goal:
  
  c : Color.t
  l : tree
  y : X.t
  r : tree
  Hl : forall s : tree,
        Ok l -> Ok s' -> subset l s = true <-> Subset l s'
  Hr : forall (x : elt) (s : t),
        Ok r -> In x s /\ ~ In x r -> f x = true
  Hr' : forall (x : elt) (s : t),
        Ok r -> In x s /\ ~ In x r -> f x = true
  Hr'' : forall x y : elt,
        Ok r -> In x s /\ ~ In x r -> f x = true
  Hr' : forall (x : elt) (s : t),
        Ok (Bk rl rx rr) ->
        InT y (del x (Bk rl rx rr)) <-> InT y (Bk rl rx rr) /\ ~ X.eq y x
  H0 : In x (filter f l)
  H2 : In x (filter f l)
  H4 : true = true
  ============================
   (X.lt y x)


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_disj@0>


TcDebug (2) > 
Goal:
  
  c : Color.t
  l : tree
  y : X.t
  r : tree
  Hl : forall s : tree,
       Ok l -> Ok s' -> subset l s = true <-> Subset l s'
  Hr : forall (x : elt) (s : t),
       Ok r -> In x s /\ ~ In x r -> f x = true
  Hr' : forall (x : elt) (s : t),
       InT y (del x (Bk rl rx rr)) <-> InT y (Bk rl rx rr) /\ ~ X.eq y x
  H0 : In x (filter f l)
  H

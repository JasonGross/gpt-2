======== SAMPLE 1 ========

  s2' : t
  s3' : t
  H : forall a : E.t, In a s2 -> In a s3'
  a : E.t
  H1 : In a s3'
  H2 : In a s3'
  ============================
   (In a s2')


Debug:
Going to execute:
match reverse goal with
| |- ?X1 => <Coq.Init.Tauto.is_unit_or_eq> flags X1; constructor 1
| _:?X1 |- _ => <Coq.Init.Tauto.is_empty> flags X1; elimtype X1; assumption
| _:?X1 |- ?X1 => assumption
end


TcDebug (2) > 
Goal:
  
  s1 : t
  s2 : t
  x : E.t
  H : forall a : E.t, In x s2 -> In x s3'
  a : E.t
  H1 : In a s3'
  H2 : In a s3'
  ============================
   (In a s2')


Debug:
Going to execute:
<Coq.Init.Tauto.is_unit_or_eq> flags X1; constructor 1


TcDebug (3) > 
Goal:
  
  s1 : t
  s2 : t
  x : E.t
  H : forall a : E.t, In x s2 -> In x s3'
  a : E.t
  H1 : In a s3'
  H2 : In a s3'
  ============================
   (In a s2')


Debug: Going to execute:
<Coq.Init.Tauto.is_unit_or_eq> flags X1


TcDebug (3) > 
Goal:
  
  s1 : t
  s2 : t
  x : E.t
  H : forall a : E.t, In x s2 -> In x s3'
  a : E.t
  H1 : In a s3'
  H2 : In a s3'
  ============================
   (In a s2')


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_unit_or_eq@0>


TcDebug (4) > 
Goal:
  
  s1 : t
  s2 : t
  x : E.t
  H : forall a : E.t, In x s2 -> In x s3'
  a : E.t
  H1 : In a s3'
  H2 : In a s3'
  ============================
   (In a s2')


Debug: Going to execute:
<tauto_plugin::is_unit_or_eq@0>


TcDebug (4) > 
Debug: Level 4: evaluation returns
<tactic closure>


Goal:
  
  s1 : t
  s2 : t
  x : E.t
  H : forall a : E.t, In x s2 -> In x s3'
  a : E.t
  H1 : In a s3'
  H2 : In a s3'
  ============================
   (In a s2')


Debug:
Going to execute:
<Coq.Init.Tauto.is_empty> flags X1; elimtype X1; assumption


TcDebug (3) > 
Goal:
  
  s1 : t
  s2 : t
  x : E.t
  H : forall a : E.t, In x s2 -> In x s3'
  a : E.t
  H1 : In a s3'
  H2 : In a s3'
  ============================
   (In a s2')


Debug: Going to execute:
<Coq.Init.Tauto.is_empty> flags X1; elimtype X1


TcDebug (3) > 
Goal:
  
  s1 : t
  s2 : t
  x : E.t
  H : forall a : E.t, In x s2

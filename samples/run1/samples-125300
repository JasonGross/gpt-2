======== SAMPLE 1 ========
 2
  _x0 : height (Leaf elt) > height m + 2
  _x : height (Leaf elt) <= height (Leaf elt) + 2
  y : key
  H : In y l
  ============================
   (In y l \/ In y (Leaf elt))


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_conj@0>


TcDebug (2) > 
Goal:
  
  elt : Type
  m : t elt
  m' : t elt
  x : key
  e : elt
  l : list (key * elt)
  y : key
  H : In y l
  ============================
   (In y l \/ In y (Leaf elt))


Debug: Going to execute:
<tauto_plugin::is_conj@0>


TcDebug (2) > 
Debug: Level 2: evaluation returns
<tactic closure>


Goal:
  
  elt : Type
  m : t elt
  m' : t elt
  x : key
  e : elt
  l : list (key * elt)
  y : key
  H : In y l
  ============================
   (In y l \/ In y (Leaf elt))


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro; clear id


TcDebug (1) > 
Goal:
  
  elt : Type
  m : t elt
  m' : t elt
  x : key
  e : elt
  l : list (key * elt)
  y : key
  H : In y l
  ============================
   (In y l \/ In y (Leaf elt))


Debug:
Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id; do 2 intro


TcDebug (1) > 
Goal:
  
  elt : Type
  m : t elt
  m' : t elt
  x : key
  e : elt
  l : list (key * elt)
  y : key
  H : In y l
  ============================
   (In y l \/ In y (Leaf elt))


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1; elim id


TcDebug (1) > 
Goal:
  
  elt : Type
  m : t elt
  m' : t elt
  x : key
  e : elt
  l : list (key * elt)
  y : key
  H : In y l
  ============================
   (In y l \/ In y (Leaf elt))


Debug: Going to execute:
<Coq.Init.Tauto.is_conj> flags X1


TcDebug (1) > 
Goal:
  
  elt : Type
  m : t elt
  m' : t elt
  x : key
  e : elt
  l : list (key * elt)
  y : key
  H : In y l
  ============================
   (In y l \/ In y (Leaf elt))


Debug: Going to execute:
fun tauto_flags X1 => <tauto_plugin::is_conj@0>


TcDebug (2) > 
Goal:
  
  elt : Type
  m : t elt
  m' : t elt
  x : key
  e : elt
  l : list (key * elt)
  y : key
  H : In y l
  ============================
   (In y l \/ In y (Leaf elt))


Debug: Going to execute:
<tauto_plugin::is_conj@0>


TcDebug (2) > 
Debug: Level 2: evaluation returns
<tactic closure>


Goal:
  
  elt

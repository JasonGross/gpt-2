======== SAMPLE 1 ========
2.7) > 
Goal:
  
  R : forall n : t, 0 == n <-> n == 0
  n : t
  m : t
  H : n == 0
  H1 : n == 0
  H2 : n == 0
  ============================
   (n == 0)


Debug:
Going to execute:
fun flags =>
  let f :=
   match Cst t with
   | NotConstant =>
       match t with
       | rO => fun _ => fv
       | rI => fun _ => fv
       | add ?t1 ?t2 => fun _ => TFV t2 ltac:(TFV t1 fv)
       | mul ?t1 ?t2 => fun _ => TFV t2 ltac:(TFV t1 fv)
       | sub ?t1 ?t2 => fun _ => TFV t2 ltac:(TFV t1 fv)
       | opp ?t1 => fun _ => TFV t1 fv
       | pow ?t1 ?n =>
           match CstPow n with
           | NotConstant => fun _ => AddFvTail t fv
           | _ => fun _ => TFV t1 fv
           end
       | _ => fun _ => AddFvTail t fv
       end
   | _ => fun _ => fv
   end
  in
  f ltac:(())


TcDebug (11) > 
Goal:
  
  R : forall n : t, 0 == n <-> n == 0
  n : t
  m : t
  H : n == 0
  H1 : n == 0
  H2 : n == 0
  ============================
   (n == 0)


Debug:
Going to execute:
match Cst t with
| NotConstant =>
     match t with
     | rO => fun _ => fv
     | rI => fun _ => fv
     | add ?t1 ?t2 => fun _ => TFV t2 ltac:(TFV t1 fv)
     | mul ?t1 ?t2 => fun _ => TFV t2 ltac:(TFV t1 fv)
     | sub ?t1 ?t2 => fun _ => TFV t2 ltac:(TFV t1 fv)
     | opp ?t1 => fun _ => TFV t1 fv
     | pow ?t1 ?n =>
         match CstPow n with
         | NotConstant => fun _ => AddFvTail t fv
         | _ => fun _ => TFV t1 fv
         end
     | _ => fun _ => AddFvTail t fv
     end
| _ => fun _ => fv
end


TcDebug (12) > 
Goal:
  
  R : forall n : t, 0 == n <-> n == 0
  n : t
  m : t
  H : n == 0
  H1 : n == 0
  H2 : n == 0
  ============================
   (n == 0)


Debug: Going to execute:
Cst t


TcDebug (13) > 
Goal:
  
  R : forall n : t, 0 == n <-> n == 0
  n : t
  m : t
  H : n == 0
  H1 : n == 0
  H2 : n == 0
  ============================
   (n == 0)


Debug: Going to execute:
inv_morph_nothing


TcDebug (14) > 
Goal:
  
  R : forall n : t, 0 == n <
